-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\book_example_v2\ber_dut.vhd
-- Created: 2023-01-16 12:06:09
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ber_dut
-- Source Path: ber/ber_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ber_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        aximm_bit_count_reset             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        aximm_length                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        s_axis_decoded_tvalid             :   IN    std_logic;  -- ufix1
        s_axis_decoded_tdata              :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        s_axis_orig_tvalid                :   IN    std_logic;  -- ufix1
        s_axis_orig_tdata                 :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        ce_out                            :   OUT   std_logic;  -- ufix1
        aximm_bit_error                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        aximm_bit_count                   :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        aximm_fifo_num                    :   OUT   std_logic_vector(16 DOWNTO 0);  -- ufix17
        ber_intr                          :   OUT   std_logic  -- ufix1
        );
END ber_dut;


ARCHITECTURE rtl OF ber_dut IS

  -- Component Declarations
  COMPONENT ber_src_BER
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          aximm_bit_count_reset           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          aximm_length                    :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          s_axis_decoded_tvalid           :   IN    std_logic;  -- ufix1
          s_axis_decoded_tdata            :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          s_axis_orig_tvalid              :   IN    std_logic;  -- ufix1
          s_axis_orig_tdata               :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          ce_out                          :   OUT   std_logic;  -- ufix1
          aximm_bit_error                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          aximm_bit_count                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          aximm_fifo_num                  :   OUT   std_logic_vector(16 DOWNTO 0);  -- ufix17
          ber_intr                        :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : ber_src_BER
    USE ENTITY work.ber_src_BER(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL s_axis_decoded_tvalid_sig        : std_logic;  -- ufix1
  SIGNAL s_axis_orig_tvalid_sig           : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL aximm_bit_error_sig              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL aximm_bit_count_sig              : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL aximm_fifo_num_sig               : std_logic_vector(16 DOWNTO 0);  -- ufix17
  SIGNAL ber_intr_sig                     : std_logic;  -- ufix1

BEGIN
  u_ber_src_BER : ber_src_BER
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              aximm_bit_count_reset => aximm_bit_count_reset,  -- ufix32
              aximm_length => aximm_length,  -- ufix32
              s_axis_decoded_tvalid => s_axis_decoded_tvalid_sig,  -- ufix1
              s_axis_decoded_tdata => s_axis_decoded_tdata,  -- ufix8
              s_axis_orig_tvalid => s_axis_orig_tvalid_sig,  -- ufix1
              s_axis_orig_tdata => s_axis_orig_tdata,  -- ufix8
              ce_out => ce_out_sig,  -- ufix1
              aximm_bit_error => aximm_bit_error_sig,  -- ufix32
              aximm_bit_count => aximm_bit_count_sig,  -- ufix32
              aximm_fifo_num => aximm_fifo_num_sig,  -- ufix17
              ber_intr => ber_intr_sig  -- ufix1
              );

  s_axis_decoded_tvalid_sig <= s_axis_decoded_tvalid;

  s_axis_orig_tvalid_sig <= s_axis_orig_tvalid;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  aximm_bit_error <= aximm_bit_error_sig;

  aximm_bit_count <= aximm_bit_count_sig;

  aximm_fifo_num <= aximm_fifo_num_sig;

  ber_intr <= ber_intr_sig;

END rtl;

