-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\fec_ber_hw\soft_demodulation_src_Soft_Demodulation.vhd
-- Created: 2022-10-06 15:14:46
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 3.125e-09
-- Target subsystem base rate: 3.125e-09
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        3.125e-09
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- aximm_llr_max                 ce_out        3.125e-09
-- m_axis_tvalid                 ce_out        3.125e-09
-- m_axis_tdata                  ce_out        3.125e-09
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: soft_demodulation_src_Soft_Demodulation
-- Source Path: fec_ber_hw/Soft Demodulation
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY soft_demodulation_src_Soft_Demodulation IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        aximm_llr_scale                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En22
        aximm_llr_mag_reset               :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        s_axis_tvalid                     :   IN    std_logic;
        s_axis_tdata                      :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        ce_out                            :   OUT   std_logic;
        aximm_llr_max                     :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32_En24
        m_axis_tvalid                     :   OUT   std_logic;
        m_axis_tdata                      :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
        );
END soft_demodulation_src_Soft_Demodulation;


ARCHITECTURE rtl OF soft_demodulation_src_Soft_Demodulation IS

  -- Component Declarations
  COMPONENT soft_demodulation_src_Soft_Demodulation_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          valid                           :   IN    std_logic;
          real_rsvd                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En11
          imag                            :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En11
          LLR_Scale                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En22
          LLR_Values                      :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En12
          );
  END COMPONENT;

  COMPONENT soft_demodulation_src_MATLAB_Function
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          u                               :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
          reset_1                         :   IN    std_logic;
          y                               :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32_En24
          );
  END COMPONENT;

  COMPONENT soft_demodulation_src_symmetric_saturation
    PORT( u                               :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En12
          y                               :   OUT   std_logic_vector(5 DOWNTO 0)  -- sfix6_En2
          );
  END COMPONENT;

  COMPONENT soft_demodulation_src_sign_extend
    PORT( u                               :   IN    std_logic_vector(5 DOWNTO 0);  -- sfix6_En2
          y                               :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : soft_demodulation_src_Soft_Demodulation_block
    USE ENTITY work.soft_demodulation_src_Soft_Demodulation_block(rtl);

  FOR ALL : soft_demodulation_src_MATLAB_Function
    USE ENTITY work.soft_demodulation_src_MATLAB_Function(rtl);

  FOR ALL : soft_demodulation_src_symmetric_saturation
    USE ENTITY work.soft_demodulation_src_symmetric_saturation(rtl);

  FOR ALL : soft_demodulation_src_sign_extend
    USE ENTITY work.soft_demodulation_src_sign_extend(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL s_axis_tdata_unsigned            : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Bit_Slice1_out1                  : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Data_Type_Conversion_out1        : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL Bit_Slice_out1                   : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Data_Type_Conversion1_out1       : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL Soft_Demodulation_out1           : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL aximm_llr_mag_reset_unsigned     : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Cast_To_Boolean_out1             : std_logic;
  SIGNAL y                                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL delayMatch_reg                   : std_logic_vector(0 TO 16);  -- ufix1 [17]
  SIGNAL s_axis_tvalid_1                  : std_logic;
  SIGNAL y_1                              : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL y_2                              : std_logic_vector(7 DOWNTO 0);  -- ufix8

BEGIN
  u_Soft_Demodulation : soft_demodulation_src_Soft_Demodulation_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              valid => s_axis_tvalid,
              real_rsvd => std_logic_vector(Data_Type_Conversion_out1),  -- sfix16_En11
              imag => std_logic_vector(Data_Type_Conversion1_out1),  -- sfix16_En11
              LLR_Scale => aximm_llr_scale,  -- ufix32_En22
              LLR_Values => Soft_Demodulation_out1  -- sfix24_En12
              );

  u_MATLAB_Function : soft_demodulation_src_MATLAB_Function
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              u => Soft_Demodulation_out1,  -- sfix24_En12
              reset_1 => Cast_To_Boolean_out1,
              y => y  -- ufix32_En24
              );

  u_symmetric_saturation : soft_demodulation_src_symmetric_saturation
    PORT MAP( u => Soft_Demodulation_out1,  -- sfix24_En12
              y => y_1  -- sfix6_En2
              );

  u_sign_extend : soft_demodulation_src_sign_extend
    PORT MAP( u => y_1,  -- sfix6_En2
              y => y_2  -- uint8
              );

  s_axis_tdata_unsigned <= unsigned(s_axis_tdata);

  Bit_Slice1_out1 <= s_axis_tdata_unsigned(31 DOWNTO 16);

  Data_Type_Conversion_out1 <= signed(Bit_Slice1_out1);

  Bit_Slice_out1 <= s_axis_tdata_unsigned(15 DOWNTO 0);

  Data_Type_Conversion1_out1 <= signed(Bit_Slice_out1);

  aximm_llr_mag_reset_unsigned <= unsigned(aximm_llr_mag_reset);

  
  Cast_To_Boolean_out1 <= '1' WHEN aximm_llr_mag_reset_unsigned /= to_unsigned(0, 32) ELSE
      '0';

  enb <= clk_enable;

  delayMatch_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delayMatch_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        delayMatch_reg(0) <= s_axis_tvalid;
        delayMatch_reg(1 TO 16) <= delayMatch_reg(0 TO 15);
      END IF;
    END IF;
  END PROCESS delayMatch_process;

  s_axis_tvalid_1 <= delayMatch_reg(16);

  ce_out <= clk_enable;

  aximm_llr_max <= y;

  m_axis_tvalid <= s_axis_tvalid_1;

  m_axis_tdata <= y_2;

END rtl;

