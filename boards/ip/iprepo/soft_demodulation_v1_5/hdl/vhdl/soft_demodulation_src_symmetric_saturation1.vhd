-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\book_example\soft_demodulation_src_symmetric_saturation1.vhd
-- Created: 2022-11-22 20:57:46
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: soft_demodulation_src_symmetric_saturation1
-- Source Path: book_example/Soft Demodulation/symmetric saturation1
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY soft_demodulation_src_symmetric_saturation1 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        soft_bits                         :   IN    std_logic_vector(5 DOWNTO 0);  -- sfix6_En2
        u                                 :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
        );
END soft_demodulation_src_symmetric_saturation1;


ARCHITECTURE rtl OF soft_demodulation_src_symmetric_saturation1 IS

  -- Signals
  SIGNAL soft_bits_signed                 : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL soft_bits_1                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL Constant2_out1                   : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL GreaterThan1_relop1              : std_logic;
  SIGNAL Constant_out1                    : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL GreaterThan_relop1               : std_logic;
  SIGNAL Multiport_Switch_out1            : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL Multiport_Switch1_out1           : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL Bit_Slice_out1                   : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Concat_out1_1                : unsigned(7 DOWNTO 0);  -- uint8

BEGIN
  soft_bits_signed <= signed(soft_bits);

  in_0_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      soft_bits_1 <= to_signed(16#00#, 6);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        soft_bits_1 <= soft_bits_signed;
      END IF;
    END IF;
  END PROCESS in_0_pipe_process;


  Constant2_out1 <= to_signed(-16#1F#, 6);

  
  GreaterThan1_relop1 <= '1' WHEN soft_bits_1 < Constant2_out1 ELSE
      '0';

  Constant_out1 <= to_signed(16#1F#, 6);

  
  GreaterThan_relop1 <= '1' WHEN soft_bits_1 > Constant_out1 ELSE
      '0';

  
  Multiport_Switch_out1 <= soft_bits_1 WHEN GreaterThan_relop1 = '0' ELSE
      Constant_out1;

  
  Multiport_Switch1_out1 <= Multiport_Switch_out1 WHEN GreaterThan1_relop1 = '0' ELSE
      Constant2_out1;

  Bit_Slice_out1 <= Multiport_Switch1_out1(5);

  Bit_Concat_out1 <= Bit_Slice_out1 & Bit_Slice_out1 & unsigned(Multiport_Switch1_out1);

  out_0_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Bit_Concat_out1_1 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Bit_Concat_out1_1 <= Bit_Concat_out1;
      END IF;
    END IF;
  END PROCESS out_0_pipe_process;


  u <= std_logic_vector(Bit_Concat_out1_1);

END rtl;

