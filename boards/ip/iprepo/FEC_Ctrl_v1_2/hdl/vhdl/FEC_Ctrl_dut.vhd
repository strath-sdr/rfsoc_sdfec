-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\book_example\FEC_Ctrl_dut.vhd
-- Created: 2022-11-23 17:53:28
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: FEC_Ctrl_dut
-- Source Path: FEC_Ctrl/FEC_Ctrl_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY FEC_Ctrl_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        aximm_ctrl                        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        aximm_length                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        s_axis_tvalid                     :   IN    std_logic;  -- ufix1
        s_axis_tdata                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        s_axis_status_tvalid              :   IN    std_logic;  -- ufix1
        s_axis_status_tdata               :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        m_axis_tready                     :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;  -- ufix1
        m_axis_ctrl_tvalid                :   OUT   std_logic;  -- ufix1
        m_axis_ctrl_tdata                 :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        m_axis_ctrl_tlast                 :   OUT   std_logic;  -- ufix1
        m_axis_tvalid                     :   OUT   std_logic;  -- ufix1
        m_axis_tdata                      :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
        s_axis_status_tready              :   OUT   std_logic;  -- ufix1
        s_axis_tready                     :   OUT   std_logic  -- ufix1
        );
END FEC_Ctrl_dut;


ARCHITECTURE rtl OF FEC_Ctrl_dut IS

  -- Component Declarations
  COMPONENT FEC_Ctrl_src_FEC_Ctrl
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          aximm_ctrl                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          aximm_length                    :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          s_axis_tvalid                   :   IN    std_logic;  -- ufix1
          s_axis_tdata                    :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          s_axis_status_tvalid            :   IN    std_logic;  -- ufix1
          s_axis_status_tdata             :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          m_axis_tready                   :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          m_axis_ctrl_tvalid              :   OUT   std_logic;  -- ufix1
          m_axis_ctrl_tdata               :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          m_axis_ctrl_tlast               :   OUT   std_logic;  -- ufix1
          m_axis_tvalid                   :   OUT   std_logic;  -- ufix1
          m_axis_tdata                    :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
          s_axis_status_tready            :   OUT   std_logic;  -- ufix1
          s_axis_tready                   :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : FEC_Ctrl_src_FEC_Ctrl
    USE ENTITY work.FEC_Ctrl_src_FEC_Ctrl(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL s_axis_tvalid_sig                : std_logic;  -- ufix1
  SIGNAL s_axis_status_tvalid_sig         : std_logic;  -- ufix1
  SIGNAL m_axis_tready_sig                : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL m_axis_ctrl_tvalid_sig           : std_logic;  -- ufix1
  SIGNAL m_axis_ctrl_tdata_sig            : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL m_axis_ctrl_tlast_sig            : std_logic;  -- ufix1
  SIGNAL m_axis_tvalid_sig                : std_logic;  -- ufix1
  SIGNAL m_axis_tdata_sig                 : std_logic_vector(127 DOWNTO 0);  -- ufix128
  SIGNAL s_axis_status_tready_sig         : std_logic;  -- ufix1
  SIGNAL s_axis_tready_sig                : std_logic;  -- ufix1

BEGIN
  u_FEC_Ctrl_src_FEC_Ctrl : FEC_Ctrl_src_FEC_Ctrl
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              aximm_ctrl => aximm_ctrl,  -- ufix32
              aximm_length => aximm_length,  -- ufix32
              s_axis_tvalid => s_axis_tvalid_sig,  -- ufix1
              s_axis_tdata => s_axis_tdata,  -- ufix32
              s_axis_status_tvalid => s_axis_status_tvalid_sig,  -- ufix1
              s_axis_status_tdata => s_axis_status_tdata,  -- ufix32
              m_axis_tready => m_axis_tready_sig,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              m_axis_ctrl_tvalid => m_axis_ctrl_tvalid_sig,  -- ufix1
              m_axis_ctrl_tdata => m_axis_ctrl_tdata_sig,  -- ufix32
              m_axis_ctrl_tlast => m_axis_ctrl_tlast_sig,  -- ufix1
              m_axis_tvalid => m_axis_tvalid_sig,  -- ufix1
              m_axis_tdata => m_axis_tdata_sig,  -- ufix128
              s_axis_status_tready => s_axis_status_tready_sig,  -- ufix1
              s_axis_tready => s_axis_tready_sig  -- ufix1
              );

  s_axis_tvalid_sig <= s_axis_tvalid;

  s_axis_status_tvalid_sig <= s_axis_status_tvalid;

  m_axis_tready_sig <= m_axis_tready;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  m_axis_ctrl_tvalid <= m_axis_ctrl_tvalid_sig;

  m_axis_ctrl_tdata <= m_axis_ctrl_tdata_sig;

  m_axis_ctrl_tlast <= m_axis_ctrl_tlast_sig;

  m_axis_tvalid <= m_axis_tvalid_sig;

  m_axis_tdata <= m_axis_tdata_sig;

  s_axis_status_tready <= s_axis_status_tready_sig;

  s_axis_tready <= s_axis_tready_sig;

END rtl;

