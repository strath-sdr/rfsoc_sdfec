-- -------------------------------------------------------------
-- 
-- File Name: hdl_32bits\hdlsrc\fec_ber_hw_V2\qam_mapping_src_QAM_Mapping.vhd
-- Created: 2022-10-27 12:38:09
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1.5625e-09
-- Target subsystem base rate: 6.25e-09
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        6.25e-09
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- m_axis_Q_tvalid               ce_out        6.25e-09
-- m_axis_Q_tdata                ce_out        6.25e-09
-- m_axis_I_tvalid               ce_out        6.25e-09
-- m_axis_I_tdata                ce_out        6.25e-09
-- s_axis_tready                 ce_out        6.25e-09
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: qam_mapping_src_QAM_Mapping
-- Source Path: fec_ber_hw_V2/QAM Mapping
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY qam_mapping_src_QAM_Mapping IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        s_axis_tvalid                     :   IN    std_logic;
        s_axis_tdata                      :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        m_axis_tready                     :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        m_axis_Q_tvalid                   :   OUT   std_logic;
        m_axis_Q_tdata                    :   OUT   std_logic_vector(47 DOWNTO 0);  -- ufix48
        m_axis_I_tvalid                   :   OUT   std_logic;
        m_axis_I_tdata                    :   OUT   std_logic_vector(47 DOWNTO 0);  -- ufix48
        s_axis_tready                     :   OUT   std_logic
        );
END qam_mapping_src_QAM_Mapping;


ARCHITECTURE rtl OF qam_mapping_src_QAM_Mapping IS

  -- Component Declarations
  COMPONENT qam_mapping_src_Buffer
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          s_axis_tvalid                   :   IN    std_logic;
          s_axis_tdata                    :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
          alpham_axis_tvalid              :   OUT   std_logic;
          alpham_axis_tdata               :   OUT   std_logic_vector(63 DOWNTO 0);  -- ufix64
          s_axis_tready                   :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT qam_mapping_src_QAM_Mapping_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          bits_lane0                      :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
          Enable                          :   IN    std_logic;
          Q_symbols                       :   OUT   std_logic_vector(47 DOWNTO 0);  -- ufix48
          I_symbols                       :   OUT   std_logic_vector(47 DOWNTO 0)  -- ufix48
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : qam_mapping_src_Buffer
    USE ENTITY work.qam_mapping_src_Buffer(rtl);

  FOR ALL : qam_mapping_src_QAM_Mapping_block
    USE ENTITY work.qam_mapping_src_QAM_Mapping_block(rtl);

  -- Signals
  SIGNAL Buffer_out1                      : std_logic;
  SIGNAL Buffer_out2                      : std_logic_vector(63 DOWNTO 0);  -- ufix64
  SIGNAL Buffer_out3                      : std_logic;
  SIGNAL QAM_Mapping_out1                 : std_logic_vector(47 DOWNTO 0);  -- ufix48
  SIGNAL QAM_Mapping_out2                 : std_logic_vector(47 DOWNTO 0);  -- ufix48

BEGIN
  u_Buffer : qam_mapping_src_Buffer
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_4_0 => clk_enable,
              s_axis_tvalid => s_axis_tvalid,
              s_axis_tdata => s_axis_tdata,  -- ufix64
              alpham_axis_tvalid => Buffer_out1,
              alpham_axis_tdata => Buffer_out2,  -- ufix64
              s_axis_tready => Buffer_out3
              );

  u_QAM_Mapping : qam_mapping_src_QAM_Mapping_block
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_4_0 => clk_enable,
              bits_lane0 => Buffer_out2,  -- ufix64
              Enable => Buffer_out1,
              Q_symbols => QAM_Mapping_out1,  -- ufix48
              I_symbols => QAM_Mapping_out2  -- ufix48
              );

  ce_out <= clk_enable;

  m_axis_Q_tvalid <= Buffer_out1;

  m_axis_Q_tdata <= QAM_Mapping_out1;

  m_axis_I_tvalid <= Buffer_out1;

  m_axis_I_tdata <= QAM_Mapping_out2;

  s_axis_tready <= Buffer_out3;

END rtl;

