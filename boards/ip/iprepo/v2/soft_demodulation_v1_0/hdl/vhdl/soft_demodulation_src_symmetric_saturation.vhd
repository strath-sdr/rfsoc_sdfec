-- -------------------------------------------------------------
-- 
-- File Name: hdl_32bits_hmm\hdlsrc\fec_ber_hw_V2\soft_demodulation_src_symmetric_saturation.vhd
-- Created: 2022-10-27 17:56:31
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: soft_demodulation_src_symmetric_saturation
-- Source Path: fec_ber_hw_V2/Soft Demodulation/Soft Demodulation/symmetric saturation
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.soft_demodulation_src_Soft_Demodulation_pkg.ALL;

ENTITY soft_demodulation_src_symmetric_saturation IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        In1                               :   IN    vector_of_std_logic_vector68(0 TO 15);  -- sfix68_En22 [16]
        Out1                              :   OUT   vector_of_std_logic_vector6(0 TO 15)  -- sfix6_En2 [16]
        );
END soft_demodulation_src_symmetric_saturation;


ARCHITECTURE rtl OF soft_demodulation_src_symmetric_saturation IS

  -- Component Declarations
  COMPONENT soft_demodulation_src_mux1
    PORT( In1                             :   IN    std_logic_vector(5 DOWNTO 0);  -- sfix6_En2
          Out1                            :   OUT   vector_of_std_logic_vector6(0 TO 15)  -- sfix6_En2 [16]
          );
  END COMPONENT;

  COMPONENT soft_demodulation_src_mux
    PORT( In1                             :   IN    std_logic_vector(5 DOWNTO 0);  -- sfix6_En2
          Out1                            :   OUT   vector_of_std_logic_vector6(0 TO 15)  -- sfix6_En2 [16]
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : soft_demodulation_src_mux1
    USE ENTITY work.soft_demodulation_src_mux1(rtl);

  FOR ALL : soft_demodulation_src_mux
    USE ENTITY work.soft_demodulation_src_mux(rtl);

  -- Signals
  SIGNAL In1_0                            : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Constant2_out1                   : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1                        : vector_of_std_logic_vector6(0 TO 15);  -- ufix6 [16]
  SIGNAL mux1_out1_0                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1_1                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1_2                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1_3                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1_4                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1_5                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1_6                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1_7                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1_8                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1_9                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1_10                     : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1_11                     : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1_12                     : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1_13                     : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1_14                     : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux1_out1_15                     : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_1                    : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_1_reg                    : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_out_2                    : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_3                    : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_4                    : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_5                    : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_6                    : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_7                    : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_8                    : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_9                    : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_10                   : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_11                   : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_12                   : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_13                   : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_14                   : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_15                   : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_16                   : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_1_reg_1                  : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_2                  : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_3                  : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_4                  : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_5                  : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_6                  : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_7                  : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_8                  : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_9                  : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_10                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_11                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_12                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_13                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_14                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_15                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL GreaterThan1_1_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop1              : std_logic;
  SIGNAL In1_1                            : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_2_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop2              : std_logic;
  SIGNAL In1_2                            : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_3_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop3              : std_logic;
  SIGNAL In1_3                            : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_4_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop4              : std_logic;
  SIGNAL In1_4                            : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_5_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop5              : std_logic;
  SIGNAL In1_5                            : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_6_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop6              : std_logic;
  SIGNAL In1_6                            : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_7_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop7              : std_logic;
  SIGNAL In1_7                            : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_8_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop8              : std_logic;
  SIGNAL In1_8                            : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_9_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop9              : std_logic;
  SIGNAL In1_9                            : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_10_cast             : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop10             : std_logic;
  SIGNAL In1_10                           : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_11_cast             : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop11             : std_logic;
  SIGNAL In1_11                           : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_12_cast             : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop12             : std_logic;
  SIGNAL In1_12                           : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_13_cast             : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop13             : std_logic;
  SIGNAL In1_13                           : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_14_cast             : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop14             : std_logic;
  SIGNAL In1_14                           : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_15_cast             : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop15             : std_logic;
  SIGNAL In1_15                           : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_16_cast             : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_relop16             : std_logic;
  SIGNAL GreaterThan1_out1                : std_logic_vector(0 TO 15);  -- boolean [16]
  SIGNAL In1_0_1                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Constant_out1                    : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1                         : vector_of_std_logic_vector6(0 TO 15);  -- ufix6 [16]
  SIGNAL mux_out1_0                       : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1_1                       : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1_2                       : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1_3                       : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1_4                       : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1_5                       : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1_6                       : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1_7                       : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1_8                       : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1_9                       : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1_10                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1_11                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1_12                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1_13                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1_14                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL mux_out1_15                      : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_1_1                  : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_1_reg_16                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_out_2_1                  : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_3_1                  : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_4_1                  : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_5_1                  : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_6_1                  : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_7_1                  : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_8_1                  : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_9_1                  : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_10_1                 : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_11_1                 : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_12_1                 : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_13_1                 : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_14_1                 : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_15_1                 : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_out_16_1                 : signed(5 DOWNTO 0);  -- sfix6_En2
  SIGNAL reduced_1_reg_17                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_18                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_19                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_20                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_21                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_22                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_23                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_24                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_25                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_26                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_27                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_28                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_29                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_30                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL reduced_1_reg_31                 : vector_of_signed6(0 TO 15);  -- sfix6 [16]
  SIGNAL GreaterThan_1_cast               : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop1               : std_logic;
  SIGNAL In1_1_1                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_2_cast               : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop2               : std_logic;
  SIGNAL In1_2_1                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_3_cast               : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop3               : std_logic;
  SIGNAL In1_3_1                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_4_cast               : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop4               : std_logic;
  SIGNAL In1_4_1                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_5_cast               : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop5               : std_logic;
  SIGNAL In1_5_1                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_6_cast               : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop6               : std_logic;
  SIGNAL In1_6_1                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_7_cast               : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop7               : std_logic;
  SIGNAL In1_7_1                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_8_cast               : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop8               : std_logic;
  SIGNAL In1_8_1                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_9_cast               : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop9               : std_logic;
  SIGNAL In1_9_1                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_10_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop10              : std_logic;
  SIGNAL In1_10_1                         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_11_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop11              : std_logic;
  SIGNAL In1_11_1                         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_12_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop12              : std_logic;
  SIGNAL In1_12_1                         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_13_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop13              : std_logic;
  SIGNAL In1_13_1                         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_14_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop14              : std_logic;
  SIGNAL In1_14_1                         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_15_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop15              : std_logic;
  SIGNAL In1_15_1                         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_16_cast              : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_relop16              : std_logic;
  SIGNAL GreaterThan_out1                 : std_logic_vector(0 TO 15);  -- boolean [16]
  SIGNAL GreaterThan_out1_0               : std_logic;
  SIGNAL In1_0_2                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux_out1_16                      : vector_of_signed6(0 TO 15);  -- sfix6_En2 [16]
  SIGNAL mux_out1_dtc                     : vector_of_signed68(0 TO 15);  -- sfix68_En22 [16]
  SIGNAL GreaterThan1_out1_0              : std_logic;
  SIGNAL mux_out1_dtc_0                   : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_0          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_16                     : vector_of_signed6(0 TO 15);  -- sfix6_En2 [16]
  SIGNAL mux1_out1_dtc                    : vector_of_signed68(0 TO 15);  -- sfix68_En22 [16]
  SIGNAL GreaterThan_out1_1               : std_logic;
  SIGNAL In1_1_2                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_out1_1              : std_logic;
  SIGNAL mux_out1_dtc_1                   : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_1          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_out1_2               : std_logic;
  SIGNAL In1_2_2                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_out1_2              : std_logic;
  SIGNAL mux_out1_dtc_2                   : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_2          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_out1_3               : std_logic;
  SIGNAL In1_3_2                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_out1_3              : std_logic;
  SIGNAL mux_out1_dtc_3                   : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_3          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_out1_4               : std_logic;
  SIGNAL In1_4_2                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_out1_4              : std_logic;
  SIGNAL mux_out1_dtc_4                   : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_4          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_out1_5               : std_logic;
  SIGNAL In1_5_2                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_out1_5              : std_logic;
  SIGNAL mux_out1_dtc_5                   : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_5          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_out1_6               : std_logic;
  SIGNAL In1_6_2                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_out1_6              : std_logic;
  SIGNAL mux_out1_dtc_6                   : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_6          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_out1_7               : std_logic;
  SIGNAL In1_7_2                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_out1_7              : std_logic;
  SIGNAL mux_out1_dtc_7                   : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_7          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_out1_8               : std_logic;
  SIGNAL In1_8_2                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_out1_8              : std_logic;
  SIGNAL mux_out1_dtc_8                   : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_8          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_out1_9               : std_logic;
  SIGNAL In1_9_2                          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_out1_9              : std_logic;
  SIGNAL mux_out1_dtc_9                   : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_9          : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_out1_10              : std_logic;
  SIGNAL In1_10_2                         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_out1_10             : std_logic;
  SIGNAL mux_out1_dtc_10                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_10         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_out1_11              : std_logic;
  SIGNAL In1_11_2                         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_out1_11             : std_logic;
  SIGNAL mux_out1_dtc_11                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_11         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_out1_12              : std_logic;
  SIGNAL In1_12_2                         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_out1_12             : std_logic;
  SIGNAL mux_out1_dtc_12                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_12         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_out1_13              : std_logic;
  SIGNAL In1_13_2                         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_out1_13             : std_logic;
  SIGNAL mux_out1_dtc_13                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_13         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_out1_14              : std_logic;
  SIGNAL In1_14_2                         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_out1_14             : std_logic;
  SIGNAL mux_out1_dtc_14                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_14         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan_out1_15              : std_logic;
  SIGNAL In1_15_2                         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL GreaterThan1_out1_15             : std_logic;
  SIGNAL mux_out1_dtc_15                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch_out1_15         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_0                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_0         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_1                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_1         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_2                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_2         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_3                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_3         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_4                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_4         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_5                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_5         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_6                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_6         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_7                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_7         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_8                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_8         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_9                  : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_9         : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_10                 : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_10        : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_11                 : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_11        : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_12                 : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_12        : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_13                 : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_13        : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_14                 : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_14        : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL mux1_out1_dtc_15                 : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1_15        : signed(67 DOWNTO 0);  -- sfix68_En22
  SIGNAL Multiport_Switch1_out1           : vector_of_signed68(0 TO 15);  -- sfix68_En22 [16]
  SIGNAL Data_Type_Conversion2_out1       : vector_of_signed6(0 TO 15);  -- sfix6_En2 [16]

BEGIN
  u_mux1 : soft_demodulation_src_mux1
    PORT MAP( In1 => std_logic_vector(Constant2_out1),  -- sfix6_En2
              Out1 => mux1_out1  -- sfix6_En2 [16]
              );

  u_mux : soft_demodulation_src_mux
    PORT MAP( In1 => std_logic_vector(Constant_out1),  -- sfix6_En2
              Out1 => mux_out1  -- sfix6_En2 [16]
              );

  In1_0 <= signed(In1(0));

  Constant2_out1 <= to_signed(-16#1F#, 6);

  mux1_out1_0 <= signed(mux1_out1(0));

  reduced_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      reduced_1_reg <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_1 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_2 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_3 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_4 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_5 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_6 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_7 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_8 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_9 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_10 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_11 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_12 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_13 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_14 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_15 <= (OTHERS => to_signed(16#00#, 6));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        reduced_1_reg(0) <= mux1_out1_0;
        reduced_1_reg(1 TO 15) <= reduced_1_reg(0 TO 14);
        reduced_1_reg_1(0) <= mux1_out1_1;
        reduced_1_reg_1(1 TO 15) <= reduced_1_reg_1(0 TO 14);
        reduced_1_reg_2(0) <= mux1_out1_2;
        reduced_1_reg_2(1 TO 15) <= reduced_1_reg_2(0 TO 14);
        reduced_1_reg_3(0) <= mux1_out1_3;
        reduced_1_reg_3(1 TO 15) <= reduced_1_reg_3(0 TO 14);
        reduced_1_reg_4(0) <= mux1_out1_4;
        reduced_1_reg_4(1 TO 15) <= reduced_1_reg_4(0 TO 14);
        reduced_1_reg_5(0) <= mux1_out1_5;
        reduced_1_reg_5(1 TO 15) <= reduced_1_reg_5(0 TO 14);
        reduced_1_reg_6(0) <= mux1_out1_6;
        reduced_1_reg_6(1 TO 15) <= reduced_1_reg_6(0 TO 14);
        reduced_1_reg_7(0) <= mux1_out1_7;
        reduced_1_reg_7(1 TO 15) <= reduced_1_reg_7(0 TO 14);
        reduced_1_reg_8(0) <= mux1_out1_8;
        reduced_1_reg_8(1 TO 15) <= reduced_1_reg_8(0 TO 14);
        reduced_1_reg_9(0) <= mux1_out1_9;
        reduced_1_reg_9(1 TO 15) <= reduced_1_reg_9(0 TO 14);
        reduced_1_reg_10(0) <= mux1_out1_10;
        reduced_1_reg_10(1 TO 15) <= reduced_1_reg_10(0 TO 14);
        reduced_1_reg_11(0) <= mux1_out1_11;
        reduced_1_reg_11(1 TO 15) <= reduced_1_reg_11(0 TO 14);
        reduced_1_reg_12(0) <= mux1_out1_12;
        reduced_1_reg_12(1 TO 15) <= reduced_1_reg_12(0 TO 14);
        reduced_1_reg_13(0) <= mux1_out1_13;
        reduced_1_reg_13(1 TO 15) <= reduced_1_reg_13(0 TO 14);
        reduced_1_reg_14(0) <= mux1_out1_14;
        reduced_1_reg_14(1 TO 15) <= reduced_1_reg_14(0 TO 14);
        reduced_1_reg_15(0) <= mux1_out1_15;
        reduced_1_reg_15(1 TO 15) <= reduced_1_reg_15(0 TO 14);
      END IF;
    END IF;
  END PROCESS reduced_1_process;

  reduced_out_1 <= reduced_1_reg(15);
  reduced_out_2 <= reduced_1_reg_1(15);
  reduced_out_3 <= reduced_1_reg_2(15);
  reduced_out_4 <= reduced_1_reg_3(15);
  reduced_out_5 <= reduced_1_reg_4(15);
  reduced_out_6 <= reduced_1_reg_5(15);
  reduced_out_7 <= reduced_1_reg_6(15);
  reduced_out_8 <= reduced_1_reg_7(15);
  reduced_out_9 <= reduced_1_reg_8(15);
  reduced_out_10 <= reduced_1_reg_9(15);
  reduced_out_11 <= reduced_1_reg_10(15);
  reduced_out_12 <= reduced_1_reg_11(15);
  reduced_out_13 <= reduced_1_reg_12(15);
  reduced_out_14 <= reduced_1_reg_13(15);
  reduced_out_15 <= reduced_1_reg_14(15);
  reduced_out_16 <= reduced_1_reg_15(15);

  GreaterThan1_1_cast <= resize(reduced_out_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop1 <= '1' WHEN In1_0 < GreaterThan1_1_cast ELSE
      '0';

  In1_1 <= signed(In1(1));

  mux1_out1_1 <= signed(mux1_out1(1));

  GreaterThan1_2_cast <= resize(reduced_out_2 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop2 <= '1' WHEN In1_1 < GreaterThan1_2_cast ELSE
      '0';

  In1_2 <= signed(In1(2));

  mux1_out1_2 <= signed(mux1_out1(2));

  GreaterThan1_3_cast <= resize(reduced_out_3 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop3 <= '1' WHEN In1_2 < GreaterThan1_3_cast ELSE
      '0';

  In1_3 <= signed(In1(3));

  mux1_out1_3 <= signed(mux1_out1(3));

  GreaterThan1_4_cast <= resize(reduced_out_4 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop4 <= '1' WHEN In1_3 < GreaterThan1_4_cast ELSE
      '0';

  In1_4 <= signed(In1(4));

  mux1_out1_4 <= signed(mux1_out1(4));

  GreaterThan1_5_cast <= resize(reduced_out_5 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop5 <= '1' WHEN In1_4 < GreaterThan1_5_cast ELSE
      '0';

  In1_5 <= signed(In1(5));

  mux1_out1_5 <= signed(mux1_out1(5));

  GreaterThan1_6_cast <= resize(reduced_out_6 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop6 <= '1' WHEN In1_5 < GreaterThan1_6_cast ELSE
      '0';

  In1_6 <= signed(In1(6));

  mux1_out1_6 <= signed(mux1_out1(6));

  GreaterThan1_7_cast <= resize(reduced_out_7 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop7 <= '1' WHEN In1_6 < GreaterThan1_7_cast ELSE
      '0';

  In1_7 <= signed(In1(7));

  mux1_out1_7 <= signed(mux1_out1(7));

  GreaterThan1_8_cast <= resize(reduced_out_8 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop8 <= '1' WHEN In1_7 < GreaterThan1_8_cast ELSE
      '0';

  In1_8 <= signed(In1(8));

  mux1_out1_8 <= signed(mux1_out1(8));

  GreaterThan1_9_cast <= resize(reduced_out_9 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop9 <= '1' WHEN In1_8 < GreaterThan1_9_cast ELSE
      '0';

  In1_9 <= signed(In1(9));

  mux1_out1_9 <= signed(mux1_out1(9));

  GreaterThan1_10_cast <= resize(reduced_out_10 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop10 <= '1' WHEN In1_9 < GreaterThan1_10_cast ELSE
      '0';

  In1_10 <= signed(In1(10));

  mux1_out1_10 <= signed(mux1_out1(10));

  GreaterThan1_11_cast <= resize(reduced_out_11 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop11 <= '1' WHEN In1_10 < GreaterThan1_11_cast ELSE
      '0';

  In1_11 <= signed(In1(11));

  mux1_out1_11 <= signed(mux1_out1(11));

  GreaterThan1_12_cast <= resize(reduced_out_12 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop12 <= '1' WHEN In1_11 < GreaterThan1_12_cast ELSE
      '0';

  In1_12 <= signed(In1(12));

  mux1_out1_12 <= signed(mux1_out1(12));

  GreaterThan1_13_cast <= resize(reduced_out_13 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop13 <= '1' WHEN In1_12 < GreaterThan1_13_cast ELSE
      '0';

  In1_13 <= signed(In1(13));

  mux1_out1_13 <= signed(mux1_out1(13));

  GreaterThan1_14_cast <= resize(reduced_out_14 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop14 <= '1' WHEN In1_13 < GreaterThan1_14_cast ELSE
      '0';

  In1_14 <= signed(In1(14));

  mux1_out1_14 <= signed(mux1_out1(14));

  GreaterThan1_15_cast <= resize(reduced_out_15 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop15 <= '1' WHEN In1_14 < GreaterThan1_15_cast ELSE
      '0';

  In1_15 <= signed(In1(15));

  mux1_out1_15 <= signed(mux1_out1(15));

  GreaterThan1_16_cast <= resize(reduced_out_16 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan1_relop16 <= '1' WHEN In1_15 < GreaterThan1_16_cast ELSE
      '0';

  GreaterThan1_out1(0) <= GreaterThan1_relop1;
  GreaterThan1_out1(1) <= GreaterThan1_relop2;
  GreaterThan1_out1(2) <= GreaterThan1_relop3;
  GreaterThan1_out1(3) <= GreaterThan1_relop4;
  GreaterThan1_out1(4) <= GreaterThan1_relop5;
  GreaterThan1_out1(5) <= GreaterThan1_relop6;
  GreaterThan1_out1(6) <= GreaterThan1_relop7;
  GreaterThan1_out1(7) <= GreaterThan1_relop8;
  GreaterThan1_out1(8) <= GreaterThan1_relop9;
  GreaterThan1_out1(9) <= GreaterThan1_relop10;
  GreaterThan1_out1(10) <= GreaterThan1_relop11;
  GreaterThan1_out1(11) <= GreaterThan1_relop12;
  GreaterThan1_out1(12) <= GreaterThan1_relop13;
  GreaterThan1_out1(13) <= GreaterThan1_relop14;
  GreaterThan1_out1(14) <= GreaterThan1_relop15;
  GreaterThan1_out1(15) <= GreaterThan1_relop16;

  In1_0_1 <= signed(In1(0));

  Constant_out1 <= to_signed(16#1F#, 6);

  mux_out1_0 <= signed(mux_out1(0));

  reduced_1_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      reduced_1_reg_16 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_17 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_18 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_19 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_20 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_21 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_22 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_23 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_24 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_25 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_26 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_27 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_28 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_29 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_30 <= (OTHERS => to_signed(16#00#, 6));
      reduced_1_reg_31 <= (OTHERS => to_signed(16#00#, 6));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        reduced_1_reg_16(0) <= mux_out1_0;
        reduced_1_reg_16(1 TO 15) <= reduced_1_reg_16(0 TO 14);
        reduced_1_reg_17(0) <= mux_out1_1;
        reduced_1_reg_17(1 TO 15) <= reduced_1_reg_17(0 TO 14);
        reduced_1_reg_18(0) <= mux_out1_2;
        reduced_1_reg_18(1 TO 15) <= reduced_1_reg_18(0 TO 14);
        reduced_1_reg_19(0) <= mux_out1_3;
        reduced_1_reg_19(1 TO 15) <= reduced_1_reg_19(0 TO 14);
        reduced_1_reg_20(0) <= mux_out1_4;
        reduced_1_reg_20(1 TO 15) <= reduced_1_reg_20(0 TO 14);
        reduced_1_reg_21(0) <= mux_out1_5;
        reduced_1_reg_21(1 TO 15) <= reduced_1_reg_21(0 TO 14);
        reduced_1_reg_22(0) <= mux_out1_6;
        reduced_1_reg_22(1 TO 15) <= reduced_1_reg_22(0 TO 14);
        reduced_1_reg_23(0) <= mux_out1_7;
        reduced_1_reg_23(1 TO 15) <= reduced_1_reg_23(0 TO 14);
        reduced_1_reg_24(0) <= mux_out1_8;
        reduced_1_reg_24(1 TO 15) <= reduced_1_reg_24(0 TO 14);
        reduced_1_reg_25(0) <= mux_out1_9;
        reduced_1_reg_25(1 TO 15) <= reduced_1_reg_25(0 TO 14);
        reduced_1_reg_26(0) <= mux_out1_10;
        reduced_1_reg_26(1 TO 15) <= reduced_1_reg_26(0 TO 14);
        reduced_1_reg_27(0) <= mux_out1_11;
        reduced_1_reg_27(1 TO 15) <= reduced_1_reg_27(0 TO 14);
        reduced_1_reg_28(0) <= mux_out1_12;
        reduced_1_reg_28(1 TO 15) <= reduced_1_reg_28(0 TO 14);
        reduced_1_reg_29(0) <= mux_out1_13;
        reduced_1_reg_29(1 TO 15) <= reduced_1_reg_29(0 TO 14);
        reduced_1_reg_30(0) <= mux_out1_14;
        reduced_1_reg_30(1 TO 15) <= reduced_1_reg_30(0 TO 14);
        reduced_1_reg_31(0) <= mux_out1_15;
        reduced_1_reg_31(1 TO 15) <= reduced_1_reg_31(0 TO 14);
      END IF;
    END IF;
  END PROCESS reduced_1_1_process;

  reduced_out_1_1 <= reduced_1_reg_16(15);
  reduced_out_2_1 <= reduced_1_reg_17(15);
  reduced_out_3_1 <= reduced_1_reg_18(15);
  reduced_out_4_1 <= reduced_1_reg_19(15);
  reduced_out_5_1 <= reduced_1_reg_20(15);
  reduced_out_6_1 <= reduced_1_reg_21(15);
  reduced_out_7_1 <= reduced_1_reg_22(15);
  reduced_out_8_1 <= reduced_1_reg_23(15);
  reduced_out_9_1 <= reduced_1_reg_24(15);
  reduced_out_10_1 <= reduced_1_reg_25(15);
  reduced_out_11_1 <= reduced_1_reg_26(15);
  reduced_out_12_1 <= reduced_1_reg_27(15);
  reduced_out_13_1 <= reduced_1_reg_28(15);
  reduced_out_14_1 <= reduced_1_reg_29(15);
  reduced_out_15_1 <= reduced_1_reg_30(15);
  reduced_out_16_1 <= reduced_1_reg_31(15);

  GreaterThan_1_cast <= resize(reduced_out_1_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop1 <= '1' WHEN In1_0_1 > GreaterThan_1_cast ELSE
      '0';

  In1_1_1 <= signed(In1(1));

  mux_out1_1 <= signed(mux_out1(1));

  GreaterThan_2_cast <= resize(reduced_out_2_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop2 <= '1' WHEN In1_1_1 > GreaterThan_2_cast ELSE
      '0';

  In1_2_1 <= signed(In1(2));

  mux_out1_2 <= signed(mux_out1(2));

  GreaterThan_3_cast <= resize(reduced_out_3_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop3 <= '1' WHEN In1_2_1 > GreaterThan_3_cast ELSE
      '0';

  In1_3_1 <= signed(In1(3));

  mux_out1_3 <= signed(mux_out1(3));

  GreaterThan_4_cast <= resize(reduced_out_4_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop4 <= '1' WHEN In1_3_1 > GreaterThan_4_cast ELSE
      '0';

  In1_4_1 <= signed(In1(4));

  mux_out1_4 <= signed(mux_out1(4));

  GreaterThan_5_cast <= resize(reduced_out_5_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop5 <= '1' WHEN In1_4_1 > GreaterThan_5_cast ELSE
      '0';

  In1_5_1 <= signed(In1(5));

  mux_out1_5 <= signed(mux_out1(5));

  GreaterThan_6_cast <= resize(reduced_out_6_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop6 <= '1' WHEN In1_5_1 > GreaterThan_6_cast ELSE
      '0';

  In1_6_1 <= signed(In1(6));

  mux_out1_6 <= signed(mux_out1(6));

  GreaterThan_7_cast <= resize(reduced_out_7_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop7 <= '1' WHEN In1_6_1 > GreaterThan_7_cast ELSE
      '0';

  In1_7_1 <= signed(In1(7));

  mux_out1_7 <= signed(mux_out1(7));

  GreaterThan_8_cast <= resize(reduced_out_8_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop8 <= '1' WHEN In1_7_1 > GreaterThan_8_cast ELSE
      '0';

  In1_8_1 <= signed(In1(8));

  mux_out1_8 <= signed(mux_out1(8));

  GreaterThan_9_cast <= resize(reduced_out_9_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop9 <= '1' WHEN In1_8_1 > GreaterThan_9_cast ELSE
      '0';

  In1_9_1 <= signed(In1(9));

  mux_out1_9 <= signed(mux_out1(9));

  GreaterThan_10_cast <= resize(reduced_out_10_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop10 <= '1' WHEN In1_9_1 > GreaterThan_10_cast ELSE
      '0';

  In1_10_1 <= signed(In1(10));

  mux_out1_10 <= signed(mux_out1(10));

  GreaterThan_11_cast <= resize(reduced_out_11_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop11 <= '1' WHEN In1_10_1 > GreaterThan_11_cast ELSE
      '0';

  In1_11_1 <= signed(In1(11));

  mux_out1_11 <= signed(mux_out1(11));

  GreaterThan_12_cast <= resize(reduced_out_12_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop12 <= '1' WHEN In1_11_1 > GreaterThan_12_cast ELSE
      '0';

  In1_12_1 <= signed(In1(12));

  mux_out1_12 <= signed(mux_out1(12));

  GreaterThan_13_cast <= resize(reduced_out_13_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop13 <= '1' WHEN In1_12_1 > GreaterThan_13_cast ELSE
      '0';

  In1_13_1 <= signed(In1(13));

  mux_out1_13 <= signed(mux_out1(13));

  GreaterThan_14_cast <= resize(reduced_out_14_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop14 <= '1' WHEN In1_13_1 > GreaterThan_14_cast ELSE
      '0';

  In1_14_1 <= signed(In1(14));

  mux_out1_14 <= signed(mux_out1(14));

  GreaterThan_15_cast <= resize(reduced_out_15_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop15 <= '1' WHEN In1_14_1 > GreaterThan_15_cast ELSE
      '0';

  In1_15_1 <= signed(In1(15));

  mux_out1_15 <= signed(mux_out1(15));

  GreaterThan_16_cast <= resize(reduced_out_16_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  
  GreaterThan_relop16 <= '1' WHEN In1_15_1 > GreaterThan_16_cast ELSE
      '0';

  GreaterThan_out1(0) <= GreaterThan_relop1;
  GreaterThan_out1(1) <= GreaterThan_relop2;
  GreaterThan_out1(2) <= GreaterThan_relop3;
  GreaterThan_out1(3) <= GreaterThan_relop4;
  GreaterThan_out1(4) <= GreaterThan_relop5;
  GreaterThan_out1(5) <= GreaterThan_relop6;
  GreaterThan_out1(6) <= GreaterThan_relop7;
  GreaterThan_out1(7) <= GreaterThan_relop8;
  GreaterThan_out1(8) <= GreaterThan_relop9;
  GreaterThan_out1(9) <= GreaterThan_relop10;
  GreaterThan_out1(10) <= GreaterThan_relop11;
  GreaterThan_out1(11) <= GreaterThan_relop12;
  GreaterThan_out1(12) <= GreaterThan_relop13;
  GreaterThan_out1(13) <= GreaterThan_relop14;
  GreaterThan_out1(14) <= GreaterThan_relop15;
  GreaterThan_out1(15) <= GreaterThan_relop16;

  GreaterThan_out1_0 <= GreaterThan_out1(0);

  In1_0_2 <= signed(In1(0));

  mux_out1_16(0) <= reduced_out_1_1;
  mux_out1_16(1) <= reduced_out_2_1;
  mux_out1_16(2) <= reduced_out_3_1;
  mux_out1_16(3) <= reduced_out_4_1;
  mux_out1_16(4) <= reduced_out_5_1;
  mux_out1_16(5) <= reduced_out_6_1;
  mux_out1_16(6) <= reduced_out_7_1;
  mux_out1_16(7) <= reduced_out_8_1;
  mux_out1_16(8) <= reduced_out_9_1;
  mux_out1_16(9) <= reduced_out_10_1;
  mux_out1_16(10) <= reduced_out_11_1;
  mux_out1_16(11) <= reduced_out_12_1;
  mux_out1_16(12) <= reduced_out_13_1;
  mux_out1_16(13) <= reduced_out_14_1;
  mux_out1_16(14) <= reduced_out_15_1;
  mux_out1_16(15) <= reduced_out_16_1;


  mux_out1_dtc_gen: FOR ii IN 0 TO 15 GENERATE
    mux_out1_dtc(ii) <= resize(mux_out1_16(ii) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  END GENERATE mux_out1_dtc_gen;


  GreaterThan1_out1_0 <= GreaterThan1_out1(0);

  mux_out1_dtc_0 <= mux_out1_dtc(0);

  
  Multiport_Switch_out1_0 <= In1_0_2 WHEN GreaterThan_out1_0 = '0' ELSE
      mux_out1_dtc_0;

  mux1_out1_16(0) <= reduced_out_1;
  mux1_out1_16(1) <= reduced_out_2;
  mux1_out1_16(2) <= reduced_out_3;
  mux1_out1_16(3) <= reduced_out_4;
  mux1_out1_16(4) <= reduced_out_5;
  mux1_out1_16(5) <= reduced_out_6;
  mux1_out1_16(6) <= reduced_out_7;
  mux1_out1_16(7) <= reduced_out_8;
  mux1_out1_16(8) <= reduced_out_9;
  mux1_out1_16(9) <= reduced_out_10;
  mux1_out1_16(10) <= reduced_out_11;
  mux1_out1_16(11) <= reduced_out_12;
  mux1_out1_16(12) <= reduced_out_13;
  mux1_out1_16(13) <= reduced_out_14;
  mux1_out1_16(14) <= reduced_out_15;
  mux1_out1_16(15) <= reduced_out_16;


  mux1_out1_dtc_gen: FOR ii1 IN 0 TO 15 GENERATE
    mux1_out1_dtc(ii1) <= resize(mux1_out1_16(ii1) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 68);
  END GENERATE mux1_out1_dtc_gen;


  GreaterThan_out1_1 <= GreaterThan_out1(1);

  In1_1_2 <= signed(In1(1));

  GreaterThan1_out1_1 <= GreaterThan1_out1(1);

  mux_out1_dtc_1 <= mux_out1_dtc(1);

  
  Multiport_Switch_out1_1 <= In1_1_2 WHEN GreaterThan_out1_1 = '0' ELSE
      mux_out1_dtc_1;

  GreaterThan_out1_2 <= GreaterThan_out1(2);

  In1_2_2 <= signed(In1(2));

  GreaterThan1_out1_2 <= GreaterThan1_out1(2);

  mux_out1_dtc_2 <= mux_out1_dtc(2);

  
  Multiport_Switch_out1_2 <= In1_2_2 WHEN GreaterThan_out1_2 = '0' ELSE
      mux_out1_dtc_2;

  GreaterThan_out1_3 <= GreaterThan_out1(3);

  In1_3_2 <= signed(In1(3));

  GreaterThan1_out1_3 <= GreaterThan1_out1(3);

  mux_out1_dtc_3 <= mux_out1_dtc(3);

  
  Multiport_Switch_out1_3 <= In1_3_2 WHEN GreaterThan_out1_3 = '0' ELSE
      mux_out1_dtc_3;

  GreaterThan_out1_4 <= GreaterThan_out1(4);

  In1_4_2 <= signed(In1(4));

  GreaterThan1_out1_4 <= GreaterThan1_out1(4);

  mux_out1_dtc_4 <= mux_out1_dtc(4);

  
  Multiport_Switch_out1_4 <= In1_4_2 WHEN GreaterThan_out1_4 = '0' ELSE
      mux_out1_dtc_4;

  GreaterThan_out1_5 <= GreaterThan_out1(5);

  In1_5_2 <= signed(In1(5));

  GreaterThan1_out1_5 <= GreaterThan1_out1(5);

  mux_out1_dtc_5 <= mux_out1_dtc(5);

  
  Multiport_Switch_out1_5 <= In1_5_2 WHEN GreaterThan_out1_5 = '0' ELSE
      mux_out1_dtc_5;

  GreaterThan_out1_6 <= GreaterThan_out1(6);

  In1_6_2 <= signed(In1(6));

  GreaterThan1_out1_6 <= GreaterThan1_out1(6);

  mux_out1_dtc_6 <= mux_out1_dtc(6);

  
  Multiport_Switch_out1_6 <= In1_6_2 WHEN GreaterThan_out1_6 = '0' ELSE
      mux_out1_dtc_6;

  GreaterThan_out1_7 <= GreaterThan_out1(7);

  In1_7_2 <= signed(In1(7));

  GreaterThan1_out1_7 <= GreaterThan1_out1(7);

  mux_out1_dtc_7 <= mux_out1_dtc(7);

  
  Multiport_Switch_out1_7 <= In1_7_2 WHEN GreaterThan_out1_7 = '0' ELSE
      mux_out1_dtc_7;

  GreaterThan_out1_8 <= GreaterThan_out1(8);

  In1_8_2 <= signed(In1(8));

  GreaterThan1_out1_8 <= GreaterThan1_out1(8);

  mux_out1_dtc_8 <= mux_out1_dtc(8);

  
  Multiport_Switch_out1_8 <= In1_8_2 WHEN GreaterThan_out1_8 = '0' ELSE
      mux_out1_dtc_8;

  GreaterThan_out1_9 <= GreaterThan_out1(9);

  In1_9_2 <= signed(In1(9));

  GreaterThan1_out1_9 <= GreaterThan1_out1(9);

  mux_out1_dtc_9 <= mux_out1_dtc(9);

  
  Multiport_Switch_out1_9 <= In1_9_2 WHEN GreaterThan_out1_9 = '0' ELSE
      mux_out1_dtc_9;

  GreaterThan_out1_10 <= GreaterThan_out1(10);

  In1_10_2 <= signed(In1(10));

  GreaterThan1_out1_10 <= GreaterThan1_out1(10);

  mux_out1_dtc_10 <= mux_out1_dtc(10);

  
  Multiport_Switch_out1_10 <= In1_10_2 WHEN GreaterThan_out1_10 = '0' ELSE
      mux_out1_dtc_10;

  GreaterThan_out1_11 <= GreaterThan_out1(11);

  In1_11_2 <= signed(In1(11));

  GreaterThan1_out1_11 <= GreaterThan1_out1(11);

  mux_out1_dtc_11 <= mux_out1_dtc(11);

  
  Multiport_Switch_out1_11 <= In1_11_2 WHEN GreaterThan_out1_11 = '0' ELSE
      mux_out1_dtc_11;

  GreaterThan_out1_12 <= GreaterThan_out1(12);

  In1_12_2 <= signed(In1(12));

  GreaterThan1_out1_12 <= GreaterThan1_out1(12);

  mux_out1_dtc_12 <= mux_out1_dtc(12);

  
  Multiport_Switch_out1_12 <= In1_12_2 WHEN GreaterThan_out1_12 = '0' ELSE
      mux_out1_dtc_12;

  GreaterThan_out1_13 <= GreaterThan_out1(13);

  In1_13_2 <= signed(In1(13));

  GreaterThan1_out1_13 <= GreaterThan1_out1(13);

  mux_out1_dtc_13 <= mux_out1_dtc(13);

  
  Multiport_Switch_out1_13 <= In1_13_2 WHEN GreaterThan_out1_13 = '0' ELSE
      mux_out1_dtc_13;

  GreaterThan_out1_14 <= GreaterThan_out1(14);

  In1_14_2 <= signed(In1(14));

  GreaterThan1_out1_14 <= GreaterThan1_out1(14);

  mux_out1_dtc_14 <= mux_out1_dtc(14);

  
  Multiport_Switch_out1_14 <= In1_14_2 WHEN GreaterThan_out1_14 = '0' ELSE
      mux_out1_dtc_14;

  GreaterThan_out1_15 <= GreaterThan_out1(15);

  In1_15_2 <= signed(In1(15));

  GreaterThan1_out1_15 <= GreaterThan1_out1(15);

  mux_out1_dtc_15 <= mux_out1_dtc(15);

  
  Multiport_Switch_out1_15 <= In1_15_2 WHEN GreaterThan_out1_15 = '0' ELSE
      mux_out1_dtc_15;

  mux1_out1_dtc_0 <= mux1_out1_dtc(0);

  
  Multiport_Switch1_out1_0 <= Multiport_Switch_out1_0 WHEN GreaterThan1_out1_0 = '0' ELSE
      mux1_out1_dtc_0;

  mux1_out1_dtc_1 <= mux1_out1_dtc(1);

  
  Multiport_Switch1_out1_1 <= Multiport_Switch_out1_1 WHEN GreaterThan1_out1_1 = '0' ELSE
      mux1_out1_dtc_1;

  mux1_out1_dtc_2 <= mux1_out1_dtc(2);

  
  Multiport_Switch1_out1_2 <= Multiport_Switch_out1_2 WHEN GreaterThan1_out1_2 = '0' ELSE
      mux1_out1_dtc_2;

  mux1_out1_dtc_3 <= mux1_out1_dtc(3);

  
  Multiport_Switch1_out1_3 <= Multiport_Switch_out1_3 WHEN GreaterThan1_out1_3 = '0' ELSE
      mux1_out1_dtc_3;

  mux1_out1_dtc_4 <= mux1_out1_dtc(4);

  
  Multiport_Switch1_out1_4 <= Multiport_Switch_out1_4 WHEN GreaterThan1_out1_4 = '0' ELSE
      mux1_out1_dtc_4;

  mux1_out1_dtc_5 <= mux1_out1_dtc(5);

  
  Multiport_Switch1_out1_5 <= Multiport_Switch_out1_5 WHEN GreaterThan1_out1_5 = '0' ELSE
      mux1_out1_dtc_5;

  mux1_out1_dtc_6 <= mux1_out1_dtc(6);

  
  Multiport_Switch1_out1_6 <= Multiport_Switch_out1_6 WHEN GreaterThan1_out1_6 = '0' ELSE
      mux1_out1_dtc_6;

  mux1_out1_dtc_7 <= mux1_out1_dtc(7);

  
  Multiport_Switch1_out1_7 <= Multiport_Switch_out1_7 WHEN GreaterThan1_out1_7 = '0' ELSE
      mux1_out1_dtc_7;

  mux1_out1_dtc_8 <= mux1_out1_dtc(8);

  
  Multiport_Switch1_out1_8 <= Multiport_Switch_out1_8 WHEN GreaterThan1_out1_8 = '0' ELSE
      mux1_out1_dtc_8;

  mux1_out1_dtc_9 <= mux1_out1_dtc(9);

  
  Multiport_Switch1_out1_9 <= Multiport_Switch_out1_9 WHEN GreaterThan1_out1_9 = '0' ELSE
      mux1_out1_dtc_9;

  mux1_out1_dtc_10 <= mux1_out1_dtc(10);

  
  Multiport_Switch1_out1_10 <= Multiport_Switch_out1_10 WHEN GreaterThan1_out1_10 = '0' ELSE
      mux1_out1_dtc_10;

  mux1_out1_dtc_11 <= mux1_out1_dtc(11);

  
  Multiport_Switch1_out1_11 <= Multiport_Switch_out1_11 WHEN GreaterThan1_out1_11 = '0' ELSE
      mux1_out1_dtc_11;

  mux1_out1_dtc_12 <= mux1_out1_dtc(12);

  
  Multiport_Switch1_out1_12 <= Multiport_Switch_out1_12 WHEN GreaterThan1_out1_12 = '0' ELSE
      mux1_out1_dtc_12;

  mux1_out1_dtc_13 <= mux1_out1_dtc(13);

  
  Multiport_Switch1_out1_13 <= Multiport_Switch_out1_13 WHEN GreaterThan1_out1_13 = '0' ELSE
      mux1_out1_dtc_13;

  mux1_out1_dtc_14 <= mux1_out1_dtc(14);

  
  Multiport_Switch1_out1_14 <= Multiport_Switch_out1_14 WHEN GreaterThan1_out1_14 = '0' ELSE
      mux1_out1_dtc_14;

  mux1_out1_dtc_15 <= mux1_out1_dtc(15);

  
  Multiport_Switch1_out1_15 <= Multiport_Switch_out1_15 WHEN GreaterThan1_out1_15 = '0' ELSE
      mux1_out1_dtc_15;

  Multiport_Switch1_out1(0) <= Multiport_Switch1_out1_0;
  Multiport_Switch1_out1(1) <= Multiport_Switch1_out1_1;
  Multiport_Switch1_out1(2) <= Multiport_Switch1_out1_2;
  Multiport_Switch1_out1(3) <= Multiport_Switch1_out1_3;
  Multiport_Switch1_out1(4) <= Multiport_Switch1_out1_4;
  Multiport_Switch1_out1(5) <= Multiport_Switch1_out1_5;
  Multiport_Switch1_out1(6) <= Multiport_Switch1_out1_6;
  Multiport_Switch1_out1(7) <= Multiport_Switch1_out1_7;
  Multiport_Switch1_out1(8) <= Multiport_Switch1_out1_8;
  Multiport_Switch1_out1(9) <= Multiport_Switch1_out1_9;
  Multiport_Switch1_out1(10) <= Multiport_Switch1_out1_10;
  Multiport_Switch1_out1(11) <= Multiport_Switch1_out1_11;
  Multiport_Switch1_out1(12) <= Multiport_Switch1_out1_12;
  Multiport_Switch1_out1(13) <= Multiport_Switch1_out1_13;
  Multiport_Switch1_out1(14) <= Multiport_Switch1_out1_14;
  Multiport_Switch1_out1(15) <= Multiport_Switch1_out1_15;


  Data_Type_Conversion2_out1_gen: FOR ii2 IN 0 TO 15 GENERATE
    Data_Type_Conversion2_out1(ii2) <= Multiport_Switch1_out1(ii2)(25 DOWNTO 20);
  END GENERATE Data_Type_Conversion2_out1_gen;


  outputgen: FOR k IN 0 TO 15 GENERATE
    Out1(k) <= std_logic_vector(Data_Type_Conversion2_out1(k));
  END GENERATE;

END rtl;

