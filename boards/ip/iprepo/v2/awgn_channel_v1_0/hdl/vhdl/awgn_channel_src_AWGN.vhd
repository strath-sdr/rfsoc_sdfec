-- -------------------------------------------------------------
-- 
-- File Name: hdl_32bits\hdlsrc\fec_ber_hw_V2\awgn_channel_src_AWGN.vhd
-- Created: 2022-10-27 12:50:15
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: awgn_channel_src_AWGN
-- Source Path: fec_ber_hw_V2/AWGN Channel/AWGN
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.awgn_channel_src_AWGN_Channel_pkg.ALL;

ENTITY awgn_channel_src_AWGN IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_4_0                         :   IN    std_logic;
        noise_std                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En30
        reset_1                           :   IN    std_logic;
        Out1_re                           :   OUT   vector_of_std_logic_vector15(0 TO 15);  -- sfix15_En11 [16]
        Out1_im                           :   OUT   vector_of_std_logic_vector15(0 TO 15)  -- sfix15_En11 [16]
        );
END awgn_channel_src_AWGN;


ARCHITECTURE rtl OF awgn_channel_src_AWGN IS

  -- Component Declarations
  COMPONENT awgn_channel_src_Subsystem
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          noise_std                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En30
          reset_1                         :   IN    std_logic;
          Out1_re                         :   OUT   vector_of_std_logic_vector15(0 TO 7);  -- sfix15_En11 [8]
          Out1_im                         :   OUT   vector_of_std_logic_vector15(0 TO 7)  -- sfix15_En11 [8]
          );
  END COMPONENT;

  COMPONENT awgn_channel_src_Subsystem1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_4_0                       :   IN    std_logic;
          noise_std                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En30
          reset_1                         :   IN    std_logic;
          Out1_re                         :   OUT   vector_of_std_logic_vector15(0 TO 7);  -- sfix15_En11 [8]
          Out1_im                         :   OUT   vector_of_std_logic_vector15(0 TO 7)  -- sfix15_En11 [8]
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : awgn_channel_src_Subsystem
    USE ENTITY work.awgn_channel_src_Subsystem(rtl);

  FOR ALL : awgn_channel_src_Subsystem1
    USE ENTITY work.awgn_channel_src_Subsystem1(rtl);

  -- Signals
  SIGNAL Subsystem_out1_re                : vector_of_std_logic_vector15(0 TO 7);  -- ufix15 [8]
  SIGNAL Subsystem_out1_im                : vector_of_std_logic_vector15(0 TO 7);  -- ufix15 [8]
  SIGNAL Subsystem1_out1_re               : vector_of_std_logic_vector15(0 TO 7);  -- ufix15 [8]
  SIGNAL Subsystem1_out1_im               : vector_of_std_logic_vector15(0 TO 7);  -- ufix15 [8]
  SIGNAL Mux_out1_re                      : vector_of_std_logic_vector15(0 TO 15);  -- ufix15 [16]
  SIGNAL Mux_out1_im                      : vector_of_std_logic_vector15(0 TO 15);  -- ufix15 [16]

BEGIN
  u_Subsystem : awgn_channel_src_Subsystem
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_4_0 => enb_1_4_0,
              noise_std => noise_std,  -- ufix32_En30
              reset_1 => reset_1,
              Out1_re => Subsystem_out1_re,  -- sfix15_En11 [8]
              Out1_im => Subsystem_out1_im  -- sfix15_En11 [8]
              );

  u_Subsystem1 : awgn_channel_src_Subsystem1
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_4_0 => enb_1_4_0,
              noise_std => noise_std,  -- ufix32_En30
              reset_1 => reset_1,
              Out1_re => Subsystem1_out1_re,  -- sfix15_En11 [8]
              Out1_im => Subsystem1_out1_im  -- sfix15_En11 [8]
              );

  Mux_out1_re(0) <= Subsystem_out1_re(0);
  Mux_out1_re(1) <= Subsystem_out1_re(1);
  Mux_out1_re(2) <= Subsystem_out1_re(2);
  Mux_out1_re(3) <= Subsystem_out1_re(3);
  Mux_out1_re(4) <= Subsystem_out1_re(4);
  Mux_out1_re(5) <= Subsystem_out1_re(5);
  Mux_out1_re(6) <= Subsystem_out1_re(6);
  Mux_out1_re(7) <= Subsystem_out1_re(7);
  Mux_out1_re(8) <= Subsystem1_out1_re(0);
  Mux_out1_re(9) <= Subsystem1_out1_re(1);
  Mux_out1_re(10) <= Subsystem1_out1_re(2);
  Mux_out1_re(11) <= Subsystem1_out1_re(3);
  Mux_out1_re(12) <= Subsystem1_out1_re(4);
  Mux_out1_re(13) <= Subsystem1_out1_re(5);
  Mux_out1_re(14) <= Subsystem1_out1_re(6);
  Mux_out1_re(15) <= Subsystem1_out1_re(7);

  Mux_out1_im(0) <= Subsystem_out1_im(0);
  Mux_out1_im(1) <= Subsystem_out1_im(1);
  Mux_out1_im(2) <= Subsystem_out1_im(2);
  Mux_out1_im(3) <= Subsystem_out1_im(3);
  Mux_out1_im(4) <= Subsystem_out1_im(4);
  Mux_out1_im(5) <= Subsystem_out1_im(5);
  Mux_out1_im(6) <= Subsystem_out1_im(6);
  Mux_out1_im(7) <= Subsystem_out1_im(7);
  Mux_out1_im(8) <= Subsystem1_out1_im(0);
  Mux_out1_im(9) <= Subsystem1_out1_im(1);
  Mux_out1_im(10) <= Subsystem1_out1_im(2);
  Mux_out1_im(11) <= Subsystem1_out1_im(3);
  Mux_out1_im(12) <= Subsystem1_out1_im(4);
  Mux_out1_im(13) <= Subsystem1_out1_im(5);
  Mux_out1_im(14) <= Subsystem1_out1_im(6);
  Mux_out1_im(15) <= Subsystem1_out1_im(7);

  Out1_re <= Mux_out1_re;

  Out1_im <= Mux_out1_im;

END rtl;

