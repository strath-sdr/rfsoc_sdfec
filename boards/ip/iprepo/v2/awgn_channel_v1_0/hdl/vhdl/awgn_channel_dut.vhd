-- -------------------------------------------------------------
-- 
-- File Name: hdl_32bits\hdlsrc\fec_ber_hw_V2\awgn_channel_dut.vhd
-- Created: 2022-10-27 12:50:21
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: awgn_channel_dut
-- Source Path: awgn_channel/awgn_channel_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY awgn_channel_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        aximm_noise_std                   :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En30
        aximm_awgn_reset                  :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        s_axis_Q_tvalid                   :   IN    std_logic;  -- ufix1
        s_axis_Q_tdata                    :   IN    std_logic_vector(47 DOWNTO 0);  -- ufix48
        s_axis_I_tvalid                   :   IN    std_logic;  -- ufix1
        s_axis_I_tdata                    :   IN    std_logic_vector(47 DOWNTO 0);  -- ufix48
        ce_out                            :   OUT   std_logic;  -- ufix1
        m00_axis_Q_tvalid                 :   OUT   std_logic;  -- ufix1
        m00_axis_Q_tdata                  :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
        m01_axis_Q_tvalid                 :   OUT   std_logic;  -- ufix1
        m01_axis_Q_tdata                  :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
        m00_axis_I_tvalid                 :   OUT   std_logic;  -- ufix1
        m00_axis_I_tdata                  :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
        m01_axis_I_tvalid                 :   OUT   std_logic;  -- ufix1
        m01_axis_I_tdata                  :   OUT   std_logic_vector(127 DOWNTO 0)  -- ufix128
        );
END awgn_channel_dut;


ARCHITECTURE rtl OF awgn_channel_dut IS

  -- Component Declarations
  COMPONENT awgn_channel_src_AWGN_Channel
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          aximm_noise_std                 :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En30
          aximm_awgn_reset                :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          s_axis_Q_tvalid                 :   IN    std_logic;  -- ufix1
          s_axis_Q_tdata                  :   IN    std_logic_vector(47 DOWNTO 0);  -- ufix48
          s_axis_I_tvalid                 :   IN    std_logic;  -- ufix1
          s_axis_I_tdata                  :   IN    std_logic_vector(47 DOWNTO 0);  -- ufix48
          ce_out                          :   OUT   std_logic;  -- ufix1
          m00_axis_Q_tvalid               :   OUT   std_logic;  -- ufix1
          m00_axis_Q_tdata                :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
          m01_axis_Q_tvalid               :   OUT   std_logic;  -- ufix1
          m01_axis_Q_tdata                :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
          m00_axis_I_tvalid               :   OUT   std_logic;  -- ufix1
          m00_axis_I_tdata                :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
          m01_axis_I_tvalid               :   OUT   std_logic;  -- ufix1
          m01_axis_I_tdata                :   OUT   std_logic_vector(127 DOWNTO 0)  -- ufix128
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : awgn_channel_src_AWGN_Channel
    USE ENTITY work.awgn_channel_src_AWGN_Channel(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL s_axis_Q_tvalid_sig              : std_logic;  -- ufix1
  SIGNAL s_axis_I_tvalid_sig              : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL m00_axis_Q_tvalid_sig            : std_logic;  -- ufix1
  SIGNAL m00_axis_Q_tdata_sig             : std_logic_vector(127 DOWNTO 0);  -- ufix128
  SIGNAL m01_axis_Q_tvalid_sig            : std_logic;  -- ufix1
  SIGNAL m01_axis_Q_tdata_sig             : std_logic_vector(127 DOWNTO 0);  -- ufix128
  SIGNAL m00_axis_I_tvalid_sig            : std_logic;  -- ufix1
  SIGNAL m00_axis_I_tdata_sig             : std_logic_vector(127 DOWNTO 0);  -- ufix128
  SIGNAL m01_axis_I_tvalid_sig            : std_logic;  -- ufix1
  SIGNAL m01_axis_I_tdata_sig             : std_logic_vector(127 DOWNTO 0);  -- ufix128

BEGIN
  u_awgn_channel_src_AWGN_Channel : awgn_channel_src_AWGN_Channel
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              aximm_noise_std => aximm_noise_std,  -- ufix32_En30
              aximm_awgn_reset => aximm_awgn_reset,  -- ufix32
              s_axis_Q_tvalid => s_axis_Q_tvalid_sig,  -- ufix1
              s_axis_Q_tdata => s_axis_Q_tdata,  -- ufix48
              s_axis_I_tvalid => s_axis_I_tvalid_sig,  -- ufix1
              s_axis_I_tdata => s_axis_I_tdata,  -- ufix48
              ce_out => ce_out_sig,  -- ufix1
              m00_axis_Q_tvalid => m00_axis_Q_tvalid_sig,  -- ufix1
              m00_axis_Q_tdata => m00_axis_Q_tdata_sig,  -- ufix128
              m01_axis_Q_tvalid => m01_axis_Q_tvalid_sig,  -- ufix1
              m01_axis_Q_tdata => m01_axis_Q_tdata_sig,  -- ufix128
              m00_axis_I_tvalid => m00_axis_I_tvalid_sig,  -- ufix1
              m00_axis_I_tdata => m00_axis_I_tdata_sig,  -- ufix128
              m01_axis_I_tvalid => m01_axis_I_tvalid_sig,  -- ufix1
              m01_axis_I_tdata => m01_axis_I_tdata_sig  -- ufix128
              );

  s_axis_Q_tvalid_sig <= s_axis_Q_tvalid;

  s_axis_I_tvalid_sig <= s_axis_I_tvalid;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  m00_axis_Q_tvalid <= m00_axis_Q_tvalid_sig;

  m00_axis_Q_tdata <= m00_axis_Q_tdata_sig;

  m01_axis_Q_tvalid <= m01_axis_Q_tvalid_sig;

  m01_axis_Q_tdata <= m01_axis_Q_tdata_sig;

  m00_axis_I_tvalid <= m00_axis_I_tvalid_sig;

  m00_axis_I_tdata <= m00_axis_I_tdata_sig;

  m01_axis_I_tvalid <= m01_axis_I_tvalid_sig;

  m01_axis_I_tdata <= m01_axis_I_tdata_sig;

END rtl;

