-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\fec_ber_hw\soft_demodulation_src_Soft_Demodulation_block.vhd
-- Created: 2022-10-06 15:14:46
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: soft_demodulation_src_Soft_Demodulation_block
-- Source Path: fec_ber_hw/Soft Demodulation/Soft Demodulation
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.soft_demodulation_src_Soft_Demodulation_pkg.ALL;

ENTITY soft_demodulation_src_Soft_Demodulation_block IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        valid                             :   IN    std_logic;
        real_rsvd                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En11
        imag                              :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En11
        LLR_Scale                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En22
        LLR_Values                        :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En12
        );
END soft_demodulation_src_Soft_Demodulation_block;


ARCHITECTURE rtl OF soft_demodulation_src_Soft_Demodulation_block IS

  -- Component Declarations
  COMPONENT soft_demodulation_src_Subsystem3
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1                           :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out2                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out3                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out4                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out5                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out6                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out7                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out8                            :   OUT   std_logic_vector(2 DOWNTO 0)  -- sfix3
          );
  END COMPONENT;

  COMPONENT soft_demodulation_src_Subsystem
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1                           :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out2                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out3                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out4                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out5                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out6                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out7                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out8                            :   OUT   std_logic_vector(2 DOWNTO 0)  -- sfix3
          );
  END COMPONENT;

  COMPONENT soft_demodulation_src_Subsystem4
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1                           :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out2                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out3                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out4                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out5                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out6                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out7                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out8                            :   OUT   std_logic_vector(2 DOWNTO 0)  -- sfix3
          );
  END COMPONENT;

  COMPONENT soft_demodulation_src_Subsystem5
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1                           :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out2                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out3                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out4                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out5                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out6                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out7                            :   OUT   std_logic_vector(2 DOWNTO 0);  -- sfix3
          Out8                            :   OUT   std_logic_vector(2 DOWNTO 0)  -- sfix3
          );
  END COMPONENT;

  COMPONENT soft_demodulation_src_Subsystem6
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          a                               :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          b                               :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          a1                              :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          b1                              :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          a2                              :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          b2                              :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          a3                              :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          b3                              :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          min                             :   OUT   std_logic_vector(34 DOWNTO 0)  -- sfix35_En22
          );
  END COMPONENT;

  COMPONENT soft_demodulation_src_Subsystem1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          a                               :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          b                               :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          a1                              :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          b1                              :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          a2                              :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          b2                              :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          a3                              :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          b3                              :   IN    std_logic_vector(34 DOWNTO 0);  -- sfix35_En22
          min                             :   OUT   std_logic_vector(34 DOWNTO 0)  -- sfix35_En22
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : soft_demodulation_src_Subsystem3
    USE ENTITY work.soft_demodulation_src_Subsystem3(rtl);

  FOR ALL : soft_demodulation_src_Subsystem
    USE ENTITY work.soft_demodulation_src_Subsystem(rtl);

  FOR ALL : soft_demodulation_src_Subsystem4
    USE ENTITY work.soft_demodulation_src_Subsystem4(rtl);

  FOR ALL : soft_demodulation_src_Subsystem5
    USE ENTITY work.soft_demodulation_src_Subsystem5(rtl);

  FOR ALL : soft_demodulation_src_Subsystem6
    USE ENTITY work.soft_demodulation_src_Subsystem6(rtl);

  FOR ALL : soft_demodulation_src_Subsystem1
    USE ENTITY work.soft_demodulation_src_Subsystem1(rtl);

  -- Signals
  SIGNAL imag_signed                      : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL y                                : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL y_1                              : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL valid_1                          : std_logic;
  SIGNAL HDL_Counter_out1                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Subsystem3_out1                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem3_out2                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem3_out3                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem3_out4                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem3_out5                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem3_out6                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem3_out7                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem3_out8                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem3_out1_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract2_sub_cast               : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract2_sub_cast_1             : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract2_out1                   : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract2_out1_1                 : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product32_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product32_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL real_signed                      : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL X                                : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL X_1                              : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL Subsystem_out1                   : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem_out2                   : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem_out3                   : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem_out4                   : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem_out5                   : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem_out6                   : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem_out7                   : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem_out8                   : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem_out1_signed            : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract19_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract19_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract19_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract19_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product27_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem3_out2_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract3_sub_cast               : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract3_sub_cast_1             : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract3_out1                   : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract3_out1_1                 : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product31_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product31_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem_out2_signed            : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract20_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract20_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract20_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract20_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product26_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem3_out3_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract4_sub_cast               : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract4_sub_cast_1             : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract4_out1                   : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract4_out1_1                 : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product30_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product30_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem_out3_signed            : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract21_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract21_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract21_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract21_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product25_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem3_out4_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract5_sub_cast               : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract5_sub_cast_1             : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract5_out1                   : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract5_out1_1                 : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product29_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product29_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem_out4_signed            : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract22_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract22_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract22_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract22_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product24_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem3_out5_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract6_sub_cast               : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract6_sub_cast_1             : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract6_out1                   : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract6_out1_1                 : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product28_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product28_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem_out5_signed            : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract23_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract23_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract23_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract23_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product23_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem3_out6_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract7_sub_cast               : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract7_sub_cast_1             : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract7_out1                   : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract7_out1_1                 : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product19_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product19_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem_out6_signed            : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract24_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract24_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract24_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract24_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product22_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem3_out7_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract8_sub_cast               : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract8_sub_cast_1             : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract8_out1                   : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract8_out1_1                 : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product18_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product18_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem_out7_signed            : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract25_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract25_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract25_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract25_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product21_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem3_out8_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract9_sub_cast               : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract9_sub_cast_1             : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract9_out1                   : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract9_out1_1                 : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product17_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product17_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem_out8_signed            : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract26_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract26_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract26_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract26_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product20_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product27_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add1_add_cast                    : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add1_add_cast_1                  : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add1_out1                        : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Product26_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add2_add_cast                    : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add2_add_cast_1                  : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add2_out1                        : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Product25_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add3_add_cast                    : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add3_add_cast_1                  : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add3_out1                        : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Product24_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add4_add_cast                    : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add4_add_cast_1                  : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add4_out1                        : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Product23_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add5_add_cast                    : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add5_add_cast_1                  : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add5_out1                        : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Product22_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add6_add_cast                    : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add6_add_cast_1                  : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add6_out1                        : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Product21_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add7_add_cast                    : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add7_add_cast_1                  : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add7_out1                        : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Product20_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add8_add_cast                    : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add8_add_cast_1                  : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add8_out1                        : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Subsystem4_out1                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem4_out2                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem4_out3                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem4_out4                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem4_out5                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem4_out6                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem4_out7                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem4_out8                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem4_out1_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract42_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract42_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract42_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract42_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product8_out1                    : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product8_out1_1                  : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem5_out1                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem5_out2                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem5_out3                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem5_out4                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem5_out5                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem5_out6                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem5_out7                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem5_out8                  : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL Subsystem5_out1_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract35_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract35_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract35_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract35_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product9_out1                    : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem4_out2_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract41_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract41_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract41_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract41_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product7_out1                    : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product7_out1_1                  : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem5_out2_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract34_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract34_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract34_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract34_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product10_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem4_out3_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract40_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract40_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract40_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract40_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product6_out1                    : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product6_out1_1                  : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem5_out3_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract33_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract33_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract33_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract33_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product11_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem4_out4_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract39_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract39_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract39_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract39_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product5_out1                    : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product5_out1_1                  : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem5_out4_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract32_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract32_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract32_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract32_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product12_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem4_out5_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract38_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract38_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract38_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract38_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product4_out1                    : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product4_out1_1                  : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem5_out5_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract31_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract31_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract31_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract31_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product13_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem4_out6_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract37_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract37_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract37_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract37_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product3_out1                    : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product3_out1_1                  : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem5_out6_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract30_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract30_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract30_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract30_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product14_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem4_out7_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract36_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract36_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract36_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract36_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product1_out1                    : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product1_out1_1                  : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem5_out7_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract29_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract29_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract29_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract29_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product15_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem4_out8_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract28_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract28_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract28_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract28_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product_out1                     : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product_out1_1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Subsystem5_out8_signed           : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Subtract27_sub_cast              : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract27_sub_cast_1            : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract27_out1                  : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Subtract27_out1_1                : signed(16 DOWNTO 0);  -- sfix17_En11
  SIGNAL Product16_out1                   : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Product9_out1_1                  : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add16_add_cast                   : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add16_add_cast_1                 : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add16_out1                       : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Product10_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add15_add_cast                   : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add15_add_cast_1                 : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add15_out1                       : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Product11_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add14_add_cast                   : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add14_add_cast_1                 : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add14_out1                       : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Product12_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add13_add_cast                   : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add13_add_cast_1                 : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add13_out1                       : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Product13_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add12_add_cast                   : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add12_add_cast_1                 : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add12_out1                       : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Product14_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add11_add_cast                   : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add11_add_cast_1                 : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add11_out1                       : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Product15_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add10_add_cast                   : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add10_add_cast_1                 : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add10_out1                       : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Product16_out1_1                 : signed(33 DOWNTO 0);  -- sfix34_En22
  SIGNAL Add9_add_cast                    : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add9_add_cast_1                  : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Add9_out1                        : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Subsystem6_out1                  : std_logic_vector(34 DOWNTO 0);  -- ufix35
  SIGNAL Subsystem6_out1_signed           : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Subsystem1_out1                  : std_logic_vector(34 DOWNTO 0);  -- ufix35
  SIGNAL Subsystem1_out1_signed           : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Subtract18_sub_cast              : signed(35 DOWNTO 0);  -- sfix36_En22
  SIGNAL Subtract18_sub_cast_1            : signed(35 DOWNTO 0);  -- sfix36_En22
  SIGNAL Subtract18_sub_temp              : signed(35 DOWNTO 0);  -- sfix36_En22
  SIGNAL Subtract18_out1                  : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL Subtract18_out1_1                : signed(34 DOWNTO 0);  -- sfix35_En22
  SIGNAL LLR_Scale_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En22
  SIGNAL HwModeRegister25_reg             : vector_of_unsigned32(0 TO 12);  -- ufix32 [13]
  SIGNAL LLR_Scale_1                      : unsigned(31 DOWNTO 0);  -- ufix32_En22
  SIGNAL Product2_cast                    : signed(32 DOWNTO 0);  -- sfix33_En22
  SIGNAL Product2_mul_temp                : signed(67 DOWNTO 0);  -- sfix68_En44
  SIGNAL Product2_out1                    : signed(66 DOWNTO 0);  -- sfix67_En44
  SIGNAL PipelineRegister12_reg           : vector_of_signed67(0 TO 2);  -- sfix67 [3]
  SIGNAL Product2_out1_1                  : signed(66 DOWNTO 0);  -- sfix67_En44
  SIGNAL Product2_out1_2                  : signed(23 DOWNTO 0);  -- sfix24_En12
  SIGNAL Product2_out1_3                  : signed(23 DOWNTO 0);  -- sfix24_En12

BEGIN
  -- zeros
  -- 
  -- ones

  u_Subsystem3 : soft_demodulation_src_Subsystem3
    PORT MAP( clk => clk,
              enb => enb,
              enb_1 => std_logic_vector(HDL_Counter_out1),  -- ufix2
              Out1 => Subsystem3_out1,  -- sfix3
              Out2 => Subsystem3_out2,  -- sfix3
              Out3 => Subsystem3_out3,  -- sfix3
              Out4 => Subsystem3_out4,  -- sfix3
              Out5 => Subsystem3_out5,  -- sfix3
              Out6 => Subsystem3_out6,  -- sfix3
              Out7 => Subsystem3_out7,  -- sfix3
              Out8 => Subsystem3_out8  -- sfix3
              );

  u_Subsystem : soft_demodulation_src_Subsystem
    PORT MAP( clk => clk,
              enb => enb,
              enb_1 => std_logic_vector(HDL_Counter_out1),  -- ufix2
              Out1 => Subsystem_out1,  -- sfix3
              Out2 => Subsystem_out2,  -- sfix3
              Out3 => Subsystem_out3,  -- sfix3
              Out4 => Subsystem_out4,  -- sfix3
              Out5 => Subsystem_out5,  -- sfix3
              Out6 => Subsystem_out6,  -- sfix3
              Out7 => Subsystem_out7,  -- sfix3
              Out8 => Subsystem_out8  -- sfix3
              );

  u_Subsystem4 : soft_demodulation_src_Subsystem4
    PORT MAP( clk => clk,
              enb => enb,
              enb_1 => std_logic_vector(HDL_Counter_out1),  -- ufix2
              Out1 => Subsystem4_out1,  -- sfix3
              Out2 => Subsystem4_out2,  -- sfix3
              Out3 => Subsystem4_out3,  -- sfix3
              Out4 => Subsystem4_out4,  -- sfix3
              Out5 => Subsystem4_out5,  -- sfix3
              Out6 => Subsystem4_out6,  -- sfix3
              Out7 => Subsystem4_out7,  -- sfix3
              Out8 => Subsystem4_out8  -- sfix3
              );

  u_Subsystem5 : soft_demodulation_src_Subsystem5
    PORT MAP( clk => clk,
              enb => enb,
              enb_1 => std_logic_vector(HDL_Counter_out1),  -- ufix2
              Out1 => Subsystem5_out1,  -- sfix3
              Out2 => Subsystem5_out2,  -- sfix3
              Out3 => Subsystem5_out3,  -- sfix3
              Out4 => Subsystem5_out4,  -- sfix3
              Out5 => Subsystem5_out5,  -- sfix3
              Out6 => Subsystem5_out6,  -- sfix3
              Out7 => Subsystem5_out7,  -- sfix3
              Out8 => Subsystem5_out8  -- sfix3
              );

  u_Subsystem6 : soft_demodulation_src_Subsystem6
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              a => std_logic_vector(Add1_out1),  -- sfix35_En22
              b => std_logic_vector(Add2_out1),  -- sfix35_En22
              a1 => std_logic_vector(Add3_out1),  -- sfix35_En22
              b1 => std_logic_vector(Add4_out1),  -- sfix35_En22
              a2 => std_logic_vector(Add5_out1),  -- sfix35_En22
              b2 => std_logic_vector(Add6_out1),  -- sfix35_En22
              a3 => std_logic_vector(Add7_out1),  -- sfix35_En22
              b3 => std_logic_vector(Add8_out1),  -- sfix35_En22
              min => Subsystem6_out1  -- sfix35_En22
              );

  u_Subsystem1 : soft_demodulation_src_Subsystem1
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              a => std_logic_vector(Add16_out1),  -- sfix35_En22
              b => std_logic_vector(Add15_out1),  -- sfix35_En22
              a1 => std_logic_vector(Add14_out1),  -- sfix35_En22
              b1 => std_logic_vector(Add13_out1),  -- sfix35_En22
              a2 => std_logic_vector(Add12_out1),  -- sfix35_En22
              b2 => std_logic_vector(Add11_out1),  -- sfix35_En22
              a3 => std_logic_vector(Add10_out1),  -- sfix35_En22
              b3 => std_logic_vector(Add9_out1),  -- sfix35_En22
              min => Subsystem1_out1  -- sfix35_En22
              );

  imag_signed <= signed(imag);

  in_2_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      y <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        y <= imag_signed;
      END IF;
    END IF;
  END PROCESS in_2_pipe_process;


  reduced_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      y_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        y_1 <= y;
      END IF;
    END IF;
  END PROCESS reduced_process;


  in_0_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      valid_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        valid_1 <= valid;
      END IF;
    END IF;
  END PROCESS in_0_pipe_process;


  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 3
  HDL_Counter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      HDL_Counter_out1 <= to_unsigned(16#0#, 2);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND valid_1 = '1' THEN
        HDL_Counter_out1 <= HDL_Counter_out1 + to_unsigned(16#1#, 2);
      END IF;
    END IF;
  END PROCESS HDL_Counter_process;


  Subsystem3_out1_signed <= signed(Subsystem3_out1);

  Subtract2_sub_cast <= resize(y_1, 17);
  Subtract2_sub_cast_1 <= resize(Subsystem3_out1_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract2_out1 <= Subtract2_sub_cast - Subtract2_sub_cast_1;

  reduced_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract2_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract2_out1_1 <= Subtract2_out1;
      END IF;
    END IF;
  END PROCESS reduced_1_process;


  Product32_out1 <= Subtract2_out1_1 * Subtract2_out1_1;

  PipelineRegister26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product32_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product32_out1_1 <= Product32_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister26_process;


  real_signed <= signed(real_rsvd);

  in_1_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      X <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        X <= real_signed;
      END IF;
    END IF;
  END PROCESS in_1_pipe_process;


  reduced_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      X_1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        X_1 <= X;
      END IF;
    END IF;
  END PROCESS reduced_2_process;


  Subsystem_out1_signed <= signed(Subsystem_out1);

  Subtract19_sub_cast <= resize(X_1, 17);
  Subtract19_sub_cast_1 <= resize(Subsystem_out1_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract19_out1 <= Subtract19_sub_cast - Subtract19_sub_cast_1;

  reduced_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract19_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract19_out1_1 <= Subtract19_out1;
      END IF;
    END IF;
  END PROCESS reduced_3_process;


  Product27_out1 <= Subtract19_out1_1 * Subtract19_out1_1;

  Subsystem3_out2_signed <= signed(Subsystem3_out2);

  Subtract3_sub_cast <= resize(y_1, 17);
  Subtract3_sub_cast_1 <= resize(Subsystem3_out2_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract3_out1 <= Subtract3_sub_cast - Subtract3_sub_cast_1;

  reduced_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract3_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract3_out1_1 <= Subtract3_out1;
      END IF;
    END IF;
  END PROCESS reduced_4_process;


  Product31_out1 <= Subtract3_out1_1 * Subtract3_out1_1;

  PipelineRegister25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product31_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product31_out1_1 <= Product31_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister25_process;


  Subsystem_out2_signed <= signed(Subsystem_out2);

  Subtract20_sub_cast <= resize(X_1, 17);
  Subtract20_sub_cast_1 <= resize(Subsystem_out2_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract20_out1 <= Subtract20_sub_cast - Subtract20_sub_cast_1;

  reduced_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract20_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract20_out1_1 <= Subtract20_out1;
      END IF;
    END IF;
  END PROCESS reduced_5_process;


  Product26_out1 <= Subtract20_out1_1 * Subtract20_out1_1;

  Subsystem3_out3_signed <= signed(Subsystem3_out3);

  Subtract4_sub_cast <= resize(y_1, 17);
  Subtract4_sub_cast_1 <= resize(Subsystem3_out3_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract4_out1 <= Subtract4_sub_cast - Subtract4_sub_cast_1;

  reduced_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract4_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract4_out1_1 <= Subtract4_out1;
      END IF;
    END IF;
  END PROCESS reduced_6_process;


  Product30_out1 <= Subtract4_out1_1 * Subtract4_out1_1;

  PipelineRegister24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product30_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product30_out1_1 <= Product30_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister24_process;


  Subsystem_out3_signed <= signed(Subsystem_out3);

  Subtract21_sub_cast <= resize(X_1, 17);
  Subtract21_sub_cast_1 <= resize(Subsystem_out3_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract21_out1 <= Subtract21_sub_cast - Subtract21_sub_cast_1;

  reduced_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract21_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract21_out1_1 <= Subtract21_out1;
      END IF;
    END IF;
  END PROCESS reduced_7_process;


  Product25_out1 <= Subtract21_out1_1 * Subtract21_out1_1;

  Subsystem3_out4_signed <= signed(Subsystem3_out4);

  Subtract5_sub_cast <= resize(y_1, 17);
  Subtract5_sub_cast_1 <= resize(Subsystem3_out4_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract5_out1 <= Subtract5_sub_cast - Subtract5_sub_cast_1;

  reduced_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract5_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract5_out1_1 <= Subtract5_out1;
      END IF;
    END IF;
  END PROCESS reduced_8_process;


  Product29_out1 <= Subtract5_out1_1 * Subtract5_out1_1;

  PipelineRegister22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product29_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product29_out1_1 <= Product29_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister22_process;


  Subsystem_out4_signed <= signed(Subsystem_out4);

  Subtract22_sub_cast <= resize(X_1, 17);
  Subtract22_sub_cast_1 <= resize(Subsystem_out4_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract22_out1 <= Subtract22_sub_cast - Subtract22_sub_cast_1;

  reduced_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract22_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract22_out1_1 <= Subtract22_out1;
      END IF;
    END IF;
  END PROCESS reduced_9_process;


  Product24_out1 <= Subtract22_out1_1 * Subtract22_out1_1;

  Subsystem3_out5_signed <= signed(Subsystem3_out5);

  Subtract6_sub_cast <= resize(y_1, 17);
  Subtract6_sub_cast_1 <= resize(Subsystem3_out5_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract6_out1 <= Subtract6_sub_cast - Subtract6_sub_cast_1;

  reduced_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract6_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract6_out1_1 <= Subtract6_out1;
      END IF;
    END IF;
  END PROCESS reduced_10_process;


  Product28_out1 <= Subtract6_out1_1 * Subtract6_out1_1;

  PipelineRegister21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product28_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product28_out1_1 <= Product28_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister21_process;


  Subsystem_out5_signed <= signed(Subsystem_out5);

  Subtract23_sub_cast <= resize(X_1, 17);
  Subtract23_sub_cast_1 <= resize(Subsystem_out5_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract23_out1 <= Subtract23_sub_cast - Subtract23_sub_cast_1;

  reduced_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract23_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract23_out1_1 <= Subtract23_out1;
      END IF;
    END IF;
  END PROCESS reduced_11_process;


  Product23_out1 <= Subtract23_out1_1 * Subtract23_out1_1;

  Subsystem3_out6_signed <= signed(Subsystem3_out6);

  Subtract7_sub_cast <= resize(y_1, 17);
  Subtract7_sub_cast_1 <= resize(Subsystem3_out6_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract7_out1 <= Subtract7_sub_cast - Subtract7_sub_cast_1;

  reduced_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract7_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract7_out1_1 <= Subtract7_out1;
      END IF;
    END IF;
  END PROCESS reduced_12_process;


  Product19_out1 <= Subtract7_out1_1 * Subtract7_out1_1;

  PipelineRegister11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product19_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product19_out1_1 <= Product19_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister11_process;


  Subsystem_out6_signed <= signed(Subsystem_out6);

  Subtract24_sub_cast <= resize(X_1, 17);
  Subtract24_sub_cast_1 <= resize(Subsystem_out6_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract24_out1 <= Subtract24_sub_cast - Subtract24_sub_cast_1;

  reduced_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract24_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract24_out1_1 <= Subtract24_out1;
      END IF;
    END IF;
  END PROCESS reduced_13_process;


  Product22_out1 <= Subtract24_out1_1 * Subtract24_out1_1;

  Subsystem3_out7_signed <= signed(Subsystem3_out7);

  Subtract8_sub_cast <= resize(y_1, 17);
  Subtract8_sub_cast_1 <= resize(Subsystem3_out7_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract8_out1 <= Subtract8_sub_cast - Subtract8_sub_cast_1;

  reduced_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract8_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract8_out1_1 <= Subtract8_out1;
      END IF;
    END IF;
  END PROCESS reduced_14_process;


  Product18_out1 <= Subtract8_out1_1 * Subtract8_out1_1;

  PipelineRegister10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product18_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product18_out1_1 <= Product18_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister10_process;


  Subsystem_out7_signed <= signed(Subsystem_out7);

  Subtract25_sub_cast <= resize(X_1, 17);
  Subtract25_sub_cast_1 <= resize(Subsystem_out7_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract25_out1 <= Subtract25_sub_cast - Subtract25_sub_cast_1;

  reduced_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract25_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract25_out1_1 <= Subtract25_out1;
      END IF;
    END IF;
  END PROCESS reduced_15_process;


  Product21_out1 <= Subtract25_out1_1 * Subtract25_out1_1;

  Subsystem3_out8_signed <= signed(Subsystem3_out8);

  Subtract9_sub_cast <= resize(y_1, 17);
  Subtract9_sub_cast_1 <= resize(Subsystem3_out8_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract9_out1 <= Subtract9_sub_cast - Subtract9_sub_cast_1;

  reduced_16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract9_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract9_out1_1 <= Subtract9_out1;
      END IF;
    END IF;
  END PROCESS reduced_16_process;


  Product17_out1 <= Subtract9_out1_1 * Subtract9_out1_1;

  PipelineRegister9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product17_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product17_out1_1 <= Product17_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister9_process;


  Subsystem_out8_signed <= signed(Subsystem_out8);

  Subtract26_sub_cast <= resize(X_1, 17);
  Subtract26_sub_cast_1 <= resize(Subsystem_out8_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract26_out1 <= Subtract26_sub_cast - Subtract26_sub_cast_1;

  reduced_17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract26_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract26_out1_1 <= Subtract26_out1;
      END IF;
    END IF;
  END PROCESS reduced_17_process;


  Product20_out1 <= Subtract26_out1_1 * Subtract26_out1_1;

  PipelineRegister20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product27_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product27_out1_1 <= Product27_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister20_process;


  Add1_add_cast <= resize(Product32_out1_1, 35);
  Add1_add_cast_1 <= resize(Product27_out1_1, 35);
  Add1_out1 <= Add1_add_cast + Add1_add_cast_1;

  PipelineRegister19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product26_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product26_out1_1 <= Product26_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister19_process;


  Add2_add_cast <= resize(Product31_out1_1, 35);
  Add2_add_cast_1 <= resize(Product26_out1_1, 35);
  Add2_out1 <= Add2_add_cast + Add2_add_cast_1;

  PipelineRegister18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product25_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product25_out1_1 <= Product25_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister18_process;


  Add3_add_cast <= resize(Product30_out1_1, 35);
  Add3_add_cast_1 <= resize(Product25_out1_1, 35);
  Add3_out1 <= Add3_add_cast + Add3_add_cast_1;

  PipelineRegister17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product24_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product24_out1_1 <= Product24_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister17_process;


  Add4_add_cast <= resize(Product29_out1_1, 35);
  Add4_add_cast_1 <= resize(Product24_out1_1, 35);
  Add4_out1 <= Add4_add_cast + Add4_add_cast_1;

  PipelineRegister16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product23_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product23_out1_1 <= Product23_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister16_process;


  Add5_add_cast <= resize(Product28_out1_1, 35);
  Add5_add_cast_1 <= resize(Product23_out1_1, 35);
  Add5_out1 <= Add5_add_cast + Add5_add_cast_1;

  PipelineRegister15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product22_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product22_out1_1 <= Product22_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister15_process;


  Add6_add_cast <= resize(Product19_out1_1, 35);
  Add6_add_cast_1 <= resize(Product22_out1_1, 35);
  Add6_out1 <= Add6_add_cast + Add6_add_cast_1;

  PipelineRegister14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product21_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product21_out1_1 <= Product21_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister14_process;


  Add7_add_cast <= resize(Product18_out1_1, 35);
  Add7_add_cast_1 <= resize(Product21_out1_1, 35);
  Add7_out1 <= Add7_add_cast + Add7_add_cast_1;

  PipelineRegister13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product20_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product20_out1_1 <= Product20_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister13_process;


  Add8_add_cast <= resize(Product17_out1_1, 35);
  Add8_add_cast_1 <= resize(Product20_out1_1, 35);
  Add8_out1 <= Add8_add_cast + Add8_add_cast_1;

  Subsystem4_out1_signed <= signed(Subsystem4_out1);

  Subtract42_sub_cast <= resize(y_1, 17);
  Subtract42_sub_cast_1 <= resize(Subsystem4_out1_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract42_out1 <= Subtract42_sub_cast - Subtract42_sub_cast_1;

  reduced_18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract42_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract42_out1_1 <= Subtract42_out1;
      END IF;
    END IF;
  END PROCESS reduced_18_process;


  Product8_out1 <= Subtract42_out1_1 * Subtract42_out1_1;

  PipelineRegister31_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product8_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product8_out1_1 <= Product8_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister31_process;


  Subsystem5_out1_signed <= signed(Subsystem5_out1);

  Subtract35_sub_cast <= resize(X_1, 17);
  Subtract35_sub_cast_1 <= resize(Subsystem5_out1_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract35_out1 <= Subtract35_sub_cast - Subtract35_sub_cast_1;

  reduced_19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract35_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract35_out1_1 <= Subtract35_out1;
      END IF;
    END IF;
  END PROCESS reduced_19_process;


  Product9_out1 <= Subtract35_out1_1 * Subtract35_out1_1;

  Subsystem4_out2_signed <= signed(Subsystem4_out2);

  Subtract41_sub_cast <= resize(y_1, 17);
  Subtract41_sub_cast_1 <= resize(Subsystem4_out2_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract41_out1 <= Subtract41_sub_cast - Subtract41_sub_cast_1;

  reduced_20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract41_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract41_out1_1 <= Subtract41_out1;
      END IF;
    END IF;
  END PROCESS reduced_20_process;


  Product7_out1 <= Subtract41_out1_1 * Subtract41_out1_1;

  PipelineRegister30_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product7_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product7_out1_1 <= Product7_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister30_process;


  Subsystem5_out2_signed <= signed(Subsystem5_out2);

  Subtract34_sub_cast <= resize(X_1, 17);
  Subtract34_sub_cast_1 <= resize(Subsystem5_out2_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract34_out1 <= Subtract34_sub_cast - Subtract34_sub_cast_1;

  reduced_21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract34_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract34_out1_1 <= Subtract34_out1;
      END IF;
    END IF;
  END PROCESS reduced_21_process;


  Product10_out1 <= Subtract34_out1_1 * Subtract34_out1_1;

  Subsystem4_out3_signed <= signed(Subsystem4_out3);

  Subtract40_sub_cast <= resize(y_1, 17);
  Subtract40_sub_cast_1 <= resize(Subsystem4_out3_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract40_out1 <= Subtract40_sub_cast - Subtract40_sub_cast_1;

  reduced_22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract40_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract40_out1_1 <= Subtract40_out1;
      END IF;
    END IF;
  END PROCESS reduced_22_process;


  Product6_out1 <= Subtract40_out1_1 * Subtract40_out1_1;

  PipelineRegister29_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product6_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product6_out1_1 <= Product6_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister29_process;


  Subsystem5_out3_signed <= signed(Subsystem5_out3);

  Subtract33_sub_cast <= resize(X_1, 17);
  Subtract33_sub_cast_1 <= resize(Subsystem5_out3_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract33_out1 <= Subtract33_sub_cast - Subtract33_sub_cast_1;

  reduced_23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract33_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract33_out1_1 <= Subtract33_out1;
      END IF;
    END IF;
  END PROCESS reduced_23_process;


  Product11_out1 <= Subtract33_out1_1 * Subtract33_out1_1;

  Subsystem4_out4_signed <= signed(Subsystem4_out4);

  Subtract39_sub_cast <= resize(y_1, 17);
  Subtract39_sub_cast_1 <= resize(Subsystem4_out4_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract39_out1 <= Subtract39_sub_cast - Subtract39_sub_cast_1;

  reduced_24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract39_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract39_out1_1 <= Subtract39_out1;
      END IF;
    END IF;
  END PROCESS reduced_24_process;


  Product5_out1 <= Subtract39_out1_1 * Subtract39_out1_1;

  PipelineRegister28_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product5_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product5_out1_1 <= Product5_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister28_process;


  Subsystem5_out4_signed <= signed(Subsystem5_out4);

  Subtract32_sub_cast <= resize(X_1, 17);
  Subtract32_sub_cast_1 <= resize(Subsystem5_out4_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract32_out1 <= Subtract32_sub_cast - Subtract32_sub_cast_1;

  reduced_25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract32_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract32_out1_1 <= Subtract32_out1;
      END IF;
    END IF;
  END PROCESS reduced_25_process;


  Product12_out1 <= Subtract32_out1_1 * Subtract32_out1_1;

  Subsystem4_out5_signed <= signed(Subsystem4_out5);

  Subtract38_sub_cast <= resize(y_1, 17);
  Subtract38_sub_cast_1 <= resize(Subsystem4_out5_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract38_out1 <= Subtract38_sub_cast - Subtract38_sub_cast_1;

  reduced_26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract38_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract38_out1_1 <= Subtract38_out1;
      END IF;
    END IF;
  END PROCESS reduced_26_process;


  Product4_out1 <= Subtract38_out1_1 * Subtract38_out1_1;

  PipelineRegister27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product4_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product4_out1_1 <= Product4_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister27_process;


  Subsystem5_out5_signed <= signed(Subsystem5_out5);

  Subtract31_sub_cast <= resize(X_1, 17);
  Subtract31_sub_cast_1 <= resize(Subsystem5_out5_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract31_out1 <= Subtract31_sub_cast - Subtract31_sub_cast_1;

  reduced_27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract31_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract31_out1_1 <= Subtract31_out1;
      END IF;
    END IF;
  END PROCESS reduced_27_process;


  Product13_out1 <= Subtract31_out1_1 * Subtract31_out1_1;

  Subsystem4_out6_signed <= signed(Subsystem4_out6);

  Subtract37_sub_cast <= resize(y_1, 17);
  Subtract37_sub_cast_1 <= resize(Subsystem4_out6_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract37_out1 <= Subtract37_sub_cast - Subtract37_sub_cast_1;

  reduced_28_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract37_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract37_out1_1 <= Subtract37_out1;
      END IF;
    END IF;
  END PROCESS reduced_28_process;


  Product3_out1 <= Subtract37_out1_1 * Subtract37_out1_1;

  PipelineRegister23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product3_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product3_out1_1 <= Product3_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister23_process;


  Subsystem5_out6_signed <= signed(Subsystem5_out6);

  Subtract30_sub_cast <= resize(X_1, 17);
  Subtract30_sub_cast_1 <= resize(Subsystem5_out6_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract30_out1 <= Subtract30_sub_cast - Subtract30_sub_cast_1;

  reduced_29_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract30_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract30_out1_1 <= Subtract30_out1;
      END IF;
    END IF;
  END PROCESS reduced_29_process;


  Product14_out1 <= Subtract30_out1_1 * Subtract30_out1_1;

  Subsystem4_out7_signed <= signed(Subsystem4_out7);

  Subtract36_sub_cast <= resize(y_1, 17);
  Subtract36_sub_cast_1 <= resize(Subsystem4_out7_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract36_out1 <= Subtract36_sub_cast - Subtract36_sub_cast_1;

  reduced_30_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract36_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract36_out1_1 <= Subtract36_out1;
      END IF;
    END IF;
  END PROCESS reduced_30_process;


  Product1_out1 <= Subtract36_out1_1 * Subtract36_out1_1;

  PipelineRegister1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product1_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product1_out1_1 <= Product1_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister1_process;


  Subsystem5_out7_signed <= signed(Subsystem5_out7);

  Subtract29_sub_cast <= resize(X_1, 17);
  Subtract29_sub_cast_1 <= resize(Subsystem5_out7_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract29_out1 <= Subtract29_sub_cast - Subtract29_sub_cast_1;

  reduced_31_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract29_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract29_out1_1 <= Subtract29_out1;
      END IF;
    END IF;
  END PROCESS reduced_31_process;


  Product15_out1 <= Subtract29_out1_1 * Subtract29_out1_1;

  Subsystem4_out8_signed <= signed(Subsystem4_out8);

  Subtract28_sub_cast <= resize(y_1, 17);
  Subtract28_sub_cast_1 <= resize(Subsystem4_out8_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract28_out1 <= Subtract28_sub_cast - Subtract28_sub_cast_1;

  reduced_32_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract28_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract28_out1_1 <= Subtract28_out1;
      END IF;
    END IF;
  END PROCESS reduced_32_process;


  Product_out1 <= Subtract28_out1_1 * Subtract28_out1_1;

  PipelineRegister_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product_out1_1 <= Product_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister_process;


  Subsystem5_out8_signed <= signed(Subsystem5_out8);

  Subtract27_sub_cast <= resize(X_1, 17);
  Subtract27_sub_cast_1 <= resize(Subsystem5_out8_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 17);
  Subtract27_out1 <= Subtract27_sub_cast - Subtract27_sub_cast_1;

  reduced_33_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract27_out1_1 <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract27_out1_1 <= Subtract27_out1;
      END IF;
    END IF;
  END PROCESS reduced_33_process;


  Product16_out1 <= Subtract27_out1_1 * Subtract27_out1_1;

  PipelineRegister32_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product9_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product9_out1_1 <= Product9_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister32_process;


  Add16_add_cast <= resize(Product8_out1_1, 35);
  Add16_add_cast_1 <= resize(Product9_out1_1, 35);
  Add16_out1 <= Add16_add_cast + Add16_add_cast_1;

  PipelineRegister2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product10_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product10_out1_1 <= Product10_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister2_process;


  Add15_add_cast <= resize(Product7_out1_1, 35);
  Add15_add_cast_1 <= resize(Product10_out1_1, 35);
  Add15_out1 <= Add15_add_cast + Add15_add_cast_1;

  PipelineRegister3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product11_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product11_out1_1 <= Product11_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister3_process;


  Add14_add_cast <= resize(Product6_out1_1, 35);
  Add14_add_cast_1 <= resize(Product11_out1_1, 35);
  Add14_out1 <= Add14_add_cast + Add14_add_cast_1;

  PipelineRegister4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product12_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product12_out1_1 <= Product12_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister4_process;


  Add13_add_cast <= resize(Product5_out1_1, 35);
  Add13_add_cast_1 <= resize(Product12_out1_1, 35);
  Add13_out1 <= Add13_add_cast + Add13_add_cast_1;

  PipelineRegister5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product13_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product13_out1_1 <= Product13_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister5_process;


  Add12_add_cast <= resize(Product4_out1_1, 35);
  Add12_add_cast_1 <= resize(Product13_out1_1, 35);
  Add12_out1 <= Add12_add_cast + Add12_add_cast_1;

  PipelineRegister6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product14_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product14_out1_1 <= Product14_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister6_process;


  Add11_add_cast <= resize(Product3_out1_1, 35);
  Add11_add_cast_1 <= resize(Product14_out1_1, 35);
  Add11_out1 <= Add11_add_cast + Add11_add_cast_1;

  PipelineRegister7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product15_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product15_out1_1 <= Product15_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister7_process;


  Add10_add_cast <= resize(Product1_out1_1, 35);
  Add10_add_cast_1 <= resize(Product15_out1_1, 35);
  Add10_out1 <= Add10_add_cast + Add10_add_cast_1;

  PipelineRegister8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product16_out1_1 <= to_signed(0, 34);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product16_out1_1 <= Product16_out1;
      END IF;
    END IF;
  END PROCESS PipelineRegister8_process;


  Add9_add_cast <= resize(Product_out1_1, 35);
  Add9_add_cast_1 <= resize(Product16_out1_1, 35);
  Add9_out1 <= Add9_add_cast + Add9_add_cast_1;

  Subsystem6_out1_signed <= signed(Subsystem6_out1);

  Subsystem1_out1_signed <= signed(Subsystem1_out1);

  Subtract18_sub_cast <= resize(Subsystem6_out1_signed, 36);
  Subtract18_sub_cast_1 <= resize(Subsystem1_out1_signed, 36);
  Subtract18_sub_temp <= Subtract18_sub_cast - Subtract18_sub_cast_1;
  
  Subtract18_out1 <= "01111111111111111111111111111111111" WHEN (Subtract18_sub_temp(35) = '0') AND (Subtract18_sub_temp(34) /= '0') ELSE
      "10000000000000000000000000000000000" WHEN (Subtract18_sub_temp(35) = '1') AND (Subtract18_sub_temp(34) /= '1') ELSE
      Subtract18_sub_temp(34 DOWNTO 0);

  HwModeRegister24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Subtract18_out1_1 <= to_signed(0, 35);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Subtract18_out1_1 <= Subtract18_out1;
      END IF;
    END IF;
  END PROCESS HwModeRegister24_process;


  LLR_Scale_unsigned <= unsigned(LLR_Scale);

  HwModeRegister25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      HwModeRegister25_reg <= (OTHERS => to_unsigned(0, 32));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        HwModeRegister25_reg(0) <= LLR_Scale_unsigned;
        HwModeRegister25_reg(1 TO 12) <= HwModeRegister25_reg(0 TO 11);
      END IF;
    END IF;
  END PROCESS HwModeRegister25_process;

  LLR_Scale_1 <= HwModeRegister25_reg(12);

  Product2_cast <= signed(resize(LLR_Scale_1, 33));
  Product2_mul_temp <= Subtract18_out1_1 * Product2_cast;
  Product2_out1 <= Product2_mul_temp(66 DOWNTO 0);

  PipelineRegister12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      PipelineRegister12_reg <= (OTHERS => to_signed(0, 67));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        PipelineRegister12_reg(0) <= Product2_out1;
        PipelineRegister12_reg(1 TO 2) <= PipelineRegister12_reg(0 TO 1);
      END IF;
    END IF;
  END PROCESS PipelineRegister12_process;

  Product2_out1_1 <= PipelineRegister12_reg(2);

  
  Product2_out1_2 <= X"7FFFFF" WHEN ((Product2_out1_1(66) = '0') AND (Product2_out1_1(65 DOWNTO 55) /= "00000000000")) OR ((Product2_out1_1(66) = '0') AND (Product2_out1_1(55 DOWNTO 32) = X"7FFFFF")) ELSE
      X"800000" WHEN (Product2_out1_1(66) = '1') AND (Product2_out1_1(65 DOWNTO 55) /= "11111111111") ELSE
      Product2_out1_1(55 DOWNTO 32) + ('0' & (Product2_out1_1(31) AND (( NOT Product2_out1_1(66)) OR (Product2_out1_1(30) OR Product2_out1_1(29) OR Product2_out1_1(28) OR Product2_out1_1(27) OR Product2_out1_1(26) OR Product2_out1_1(25) OR Product2_out1_1(24) OR Product2_out1_1(23) OR Product2_out1_1(22) OR Product2_out1_1(21) OR Product2_out1_1(20) OR Product2_out1_1(19) OR Product2_out1_1(18) OR Product2_out1_1(17) OR Product2_out1_1(16) OR Product2_out1_1(15) OR Product2_out1_1(14) OR Product2_out1_1(13) OR Product2_out1_1(12) OR Product2_out1_1(11) OR Product2_out1_1(10) OR Product2_out1_1(9) OR Product2_out1_1(8) OR Product2_out1_1(7) OR Product2_out1_1(6) OR Product2_out1_1(5) OR Product2_out1_1(4) OR Product2_out1_1(3) OR Product2_out1_1(2) OR Product2_out1_1(1) OR Product2_out1_1(0)))));

  out_0_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product2_out1_3 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product2_out1_3 <= Product2_out1_2;
      END IF;
    END IF;
  END PROCESS out_0_pipe_process;


  LLR_Values <= std_logic_vector(Product2_out1_3);

END rtl;

