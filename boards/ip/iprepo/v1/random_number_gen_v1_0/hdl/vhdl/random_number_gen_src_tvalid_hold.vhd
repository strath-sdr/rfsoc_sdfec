-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\fec_ber_hw\random_number_gen_src_tvalid_hold.vhd
-- Created: 2022-10-06 14:58:23
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: random_number_gen_src_tvalid_hold
-- Source Path: fec_ber_hw/Random Number Generator/tvalid hold
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY random_number_gen_src_tvalid_hold IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_16_0                        :   IN    std_logic;
        trigger                           :   IN    std_logic;
        comparator                        :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        enable                            :   OUT   std_logic
        );
END random_number_gen_src_tvalid_hold;


ARCHITECTURE rtl OF random_number_gen_src_tvalid_hold IS

  -- Signals
  SIGNAL comparator_unsigned              : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Multiport_Switch_out1            : std_logic;
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL Equal_relop1                     : std_logic;
  SIGNAL HDL_Counter_out1                 : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL OR_out1                          : std_logic;

BEGIN
  comparator_unsigned <= unsigned(comparator);

  Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay2_out1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        Delay2_out1 <= Multiport_Switch_out1;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  -- Free running, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  HDL_Counter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      HDL_Counter_out1 <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        IF Equal_relop1 = '1' THEN 
          HDL_Counter_out1 <= to_unsigned(0, 32);
        ELSIF Multiport_Switch_out1 = '1' THEN 
          HDL_Counter_out1 <= HDL_Counter_out1 + to_unsigned(1, 32);
        END IF;
      END IF;
    END IF;
  END PROCESS HDL_Counter_process;


  
  Equal_relop1 <= '1' WHEN HDL_Counter_out1 = comparator_unsigned ELSE
      '0';

  OR_out1 <= Equal_relop1 OR trigger;

  
  Multiport_Switch_out1 <= Delay2_out1 WHEN OR_out1 = '0' ELSE
      trigger;

  enable <= Multiport_Switch_out1;

END rtl;

